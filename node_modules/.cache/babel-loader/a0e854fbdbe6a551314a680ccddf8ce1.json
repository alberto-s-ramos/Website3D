{"ast":null,"code":"import _regeneratorRuntime from \"/Users/alberto/Projects/Personal/Website3D/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _createForOfIteratorHelper from \"/Users/alberto/Projects/Personal/Website3D/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _asyncToGenerator from \"/Users/alberto/Projects/Personal/Website3D/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/alberto/Projects/Personal/Website3D/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alberto/Projects/Personal/Website3D/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/alberto/Projects/Personal/Website3D/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/alberto/Projects/Personal/Website3D/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent } from \"tsparticles-engine\";\nexport var Grabber = /*#__PURE__*/function (_ExternalInteractorBa) {\n  _inherits(Grabber, _ExternalInteractorBa);\n\n  var _super = _createSuper(Grabber);\n\n  function Grabber(container) {\n    _classCallCheck(this, Grabber);\n\n    return _super.call(this, container);\n  }\n\n  _createClass(Grabber, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      var container = this.container,\n          mouse = container.interactivity.mouse,\n          events = container.actualOptions.interactivity.events;\n      return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _a, container, options, interactivity, mousePos, distance, query, _iterator, _step, particle, pos, pointDistance, grabLineOptions, lineOpacity, opacityLine, optColor, linksOptions, colorLine;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n\n                if (!(!interactivity.events.onHover.enable || container.interactivity.status !== mouseMoveEvent)) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                mousePos = container.interactivity.mouse.position;\n\n                if (mousePos) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 6:\n                distance = container.retina.grabModeDistance, query = container.particles.quadTree.queryCircle(mousePos, distance);\n                _iterator = _createForOfIteratorHelper(query);\n                _context.prev = 8;\n\n                _iterator.s();\n\n              case 10:\n                if ((_step = _iterator.n()).done) {\n                  _context.next = 26;\n                  break;\n                }\n\n                particle = _step.value;\n                pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n\n                if (!(pointDistance > distance)) {\n                  _context.next = 15;\n                  break;\n                }\n\n                return _context.abrupt(\"continue\", 24);\n\n              case 15:\n                grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - pointDistance * lineOpacity / distance;\n\n                if (!(opacityLine <= 0)) {\n                  _context.next = 18;\n                  break;\n                }\n\n                return _context.abrupt(\"continue\", 24);\n\n              case 18:\n                optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : particle.options.links.color;\n\n                if (!container.particles.grabLineColor) {\n                  linksOptions = options.interactivity.modes.grab.links;\n                  container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n                }\n\n                colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n\n                if (colorLine) {\n                  _context.next = 23;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 23:\n                container.canvas.drawGrabLine(particle, colorLine, opacityLine, mousePos);\n\n              case 24:\n                _context.next = 10;\n                break;\n\n              case 26:\n                _context.next = 31;\n                break;\n\n              case 28:\n                _context.prev = 28;\n                _context.t0 = _context[\"catch\"](8);\n\n                _iterator.e(_context.t0);\n\n              case 31:\n                _context.prev = 31;\n\n                _iterator.f();\n\n                return _context.finish(31);\n\n              case 34:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[8, 28, 31, 34]]);\n      }));\n\n      function interact() {\n        return _interact.apply(this, arguments);\n      }\n\n      return interact;\n    }()\n  }]);\n\n  return Grabber;\n}(ExternalInteractorBase);","map":null,"metadata":{},"sourceType":"module"}