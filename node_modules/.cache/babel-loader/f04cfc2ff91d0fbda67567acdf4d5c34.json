{"ast":null,"code":"var _jsxFileName = \"/Users/alberto.ramos/Documents/Personal/GitHub/Website3D/src/components/Skills2.js\";\nimport React, { useRef } from 'react';\nimport \"../style/Skills.scss\";\n\nconst Skills2 = () => {\n  // The strings to morph between. You can change these to anything you want!\n  const texts = [\"React\", \"Kotlin\", \"Spring\", \"Java\"]; // Controls the speed of morphing.\n\n  const morphTime = 1;\n  const cooldownTime = 0.4;\n  let textIndex = texts.length - 1;\n  let time = new Date();\n  let morph = 0;\n  let cooldown = cooldownTime;\n  text1.textContent = texts[textIndex % texts.length];\n  text2.textContent = texts[(textIndex + 1) % texts.length];\n\n  function doMorph() {\n    morph -= cooldown;\n    cooldown = 0;\n    let fraction = morph / morphTime;\n\n    if (fraction > 1) {\n      cooldown = cooldownTime;\n      fraction = 1;\n    }\n\n    setMorph(fraction);\n  } // A lot of the magic happens here, this is what applies the blur filter to the text.\n\n\n  function setMorph(fraction) {\n    // fraction = Math.cos(fraction * Math.PI) / -2 + .5;\n    text2.style.filter = `blur(${Math.min(8 / fraction - 8, 100)}px)`;\n    text2.style.opacity = `${Math.pow(fraction, 0.4) * 100}%`;\n    fraction = 1 - fraction;\n    text1.style.filter = `blur(${Math.min(8 / fraction - 8, 100)}px)`;\n    text1.style.opacity = `${Math.pow(fraction, 0.4) * 100}%`;\n    text1.textContent = texts[textIndex % texts.length];\n    text2.textContent = texts[(textIndex + 1) % texts.length];\n  }\n\n  function doCooldown() {\n    morph = 0;\n    text2.style.filter = \"\";\n    text2.style.opacity = \"100%\";\n    text1.style.filter = \"\";\n    text1.style.opacity = \"0%\";\n  } // Animation loop, which is called every frame.\n\n\n  function animate() {\n    requestAnimationFrame(animate);\n    let newTime = new Date();\n    let shouldIncrementIndex = cooldown > 0;\n    let dt = (newTime - time) / 1000;\n    time = newTime;\n    cooldown -= dt;\n\n    if (cooldown <= 0) {\n      if (shouldIncrementIndex) {\n        textIndex++;\n      }\n\n      doMorph();\n    } else {\n      doCooldown();\n    }\n  }\n\n  animate();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"skills-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    ref: text1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    ref: text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"svg\", {\n    id: \"filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"defs\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"threshold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceGraphic\",\n    type: \"matrix\",\n    values: \"1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 255 -140\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  })))));\n};\n\nexport default Skills2;","map":{"version":3,"sources":["/Users/alberto.ramos/Documents/Personal/GitHub/Website3D/src/components/Skills2.js"],"names":["React","useRef","Skills2","texts","morphTime","cooldownTime","textIndex","length","time","Date","morph","cooldown","text1","textContent","text2","doMorph","fraction","setMorph","style","filter","Math","min","opacity","pow","doCooldown","animate","requestAnimationFrame","newTime","shouldIncrementIndex","dt"],"mappings":"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","sourcesContent":["\nimport React, { useRef } from 'react'\nimport \"../style/Skills.scss\";\n\nconst Skills2= () =>{\n\n\n    // The strings to morph between. You can change these to anything you want!\n    const texts = [\n        \"React\",\n        \"Kotlin\",\n        \"Spring\",\n        \"Java\",\n    ];\n\n    // Controls the speed of morphing.\n    const morphTime = 1;\n    const cooldownTime = 0.4;\n\n    let textIndex = texts.length - 1;\n    let time = new Date();\n    let morph = 0;\n    let cooldown = cooldownTime;\n\n    text1.textContent = texts[textIndex % texts.length];\n    text2.textContent = texts[(textIndex + 1) % texts.length];\n\n    function doMorph() {\n        morph -= cooldown;\n        cooldown = 0;\n        \n        let fraction = morph / morphTime;\n        \n        if (fraction > 1) {\n            cooldown = cooldownTime;\n            fraction = 1;\n        }\n        \n        setMorph(fraction);\n    }\n\n    // A lot of the magic happens here, this is what applies the blur filter to the text.\n    function setMorph(fraction) {\n        // fraction = Math.cos(fraction * Math.PI) / -2 + .5;\n        \n        text2.style.filter = `blur(${Math.min(8 / fraction - 8, 100)}px)`;\n        text2.style.opacity = `${Math.pow(fraction, 0.4) * 100}%`;\n        \n        fraction = 1 - fraction;\n        text1.style.filter = `blur(${Math.min(8 / fraction - 8, 100)}px)`;\n        text1.style.opacity = `${Math.pow(fraction, 0.4) * 100}%`;\n        \n        text1.textContent = texts[textIndex % texts.length];\n        text2.textContent = texts[(textIndex + 1) % texts.length];\n    }\n\n    function doCooldown() {\n        morph = 0;\n        \n        text2.style.filter = \"\";\n        text2.style.opacity = \"100%\";\n        \n        text1.style.filter = \"\";\n        text1.style.opacity = \"0%\";\n    }\n\n    // Animation loop, which is called every frame.\n    function animate() {\n        requestAnimationFrame(animate);\n        \n        let newTime = new Date();\n        let shouldIncrementIndex = cooldown > 0;\n        let dt = (newTime - time) / 1000;\n        time = newTime;\n        \n        cooldown -= dt;\n        \n        if (cooldown <= 0) {\n            if (shouldIncrementIndex) {\n                textIndex++;\n            }\n            \n            doMorph();\n        } else {\n            doCooldown();\n        }\n    }\n\n\n  \n        animate()\n        return (\n            <div>\n                <div id=\"skills-container\">\n                    <span ref={text1}></span>\n                    <span ref={text2}></span>\n                </div>\n                <svg id=\"filters\">\n                    <defs>\n                        <filter id=\"threshold\">\n                            <feColorMatrix in=\"SourceGraphic\"\n                                    type=\"matrix\"\n                                    values=\"1 0 0 0 0\n                                                    0 1 0 0 0\n                                                    0 0 1 0 0\n                                                    0 0 0 255 -140\" />\n                        </filter>\n                    </defs>\n                </svg>\n            </div>\n        )\n        }\nexport default Skills2"]},"metadata":{},"sourceType":"module"}