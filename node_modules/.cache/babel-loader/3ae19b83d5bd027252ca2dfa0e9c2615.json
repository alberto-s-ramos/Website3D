{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i['return']) _i['return']();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError('Invalid attempt to destructure non-iterable instance');\n    }\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.readAttrs = readAttrs;\nexports.parseStyles = parseStyles;\nexports.readStyles = readStyles;\nexports.getAllChildren = getAllChildren;\nexports.getPathAttributes = getPathAttributes;\nexports['default'] = findSvgRoot;\nexports['default'] = extractSvgPaths;\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj['default'] = obj;\n    return newObj;\n  }\n}\n\nvar _pathConverter = require('./pathConverter');\n\nvar PathConverter = _interopRequireWildcard(_pathConverter);\n\nfunction readAttrs(node) {\n  var attrs = {};\n\n  if (!node.attributes) {\n    return attrs;\n  }\n\n  Object.keys(node.attributes).forEach(function (_key) {\n    var val = node.attributes[_key];\n\n    var key = _key.toLowerCase();\n\n    switch (key) {\n      case 'fill':\n      case 'fill-opacity':\n      case 'opacity':\n      case 'stroke':\n      case 'stroke-opacity':\n      case 'stroke-width':\n        attrs[key] = val;\n    }\n  });\n  return attrs;\n}\n\nfunction parseStyles(styleString) {\n  if (!styleString) {\n    return [];\n  }\n\n  if (typeof styleString === \"object\") {\n    return Object.keys(styleString).map(function (key) {\n      return {\n        prop: key,\n        val: styleString[key]\n      };\n    });\n  }\n\n  return styleString.split(';').map(function (declaration) {\n    var _declaration$split$map = declaration.split(':').map(function (p) {\n      return p.replace(' ', '');\n    });\n\n    var _declaration$split$map2 = _slicedToArray(_declaration$split$map, 2);\n\n    var prop = _declaration$split$map2[0];\n    var val = _declaration$split$map2[1];\n    return {\n      prop: prop,\n      val: val\n    };\n  });\n}\n\nfunction readStyles(node) {\n  var style = {};\n\n  if (!node.attributes || !node.attributes.style) {\n    return {};\n  }\n\n  parseStyles(node.attributes.style).forEach(function (_ref) {\n    var val = _ref.val;\n    var key = _ref.key;\n\n    switch (key) {\n      case 'fill':\n      case 'fill-opacity':\n      case 'opacity':\n      case 'stroke':\n      case 'stroke-opacity':\n      case 'stroke-width':\n        style[key] = val;\n    }\n  });\n  return style;\n}\n\nfunction getAllChildren(node) {\n  var i = 0;\n  var els = [];\n\n  if (!node.children) {\n    return els;\n  }\n\n  var len = node.children.length;\n\n  for (; i < len; i++) {\n    var el = node.children[i];\n    els.push(el);\n\n    if (el.children && el.children.filter(Boolean).length > 0) {\n      els = els.concat(getAllChildren(el));\n    }\n  }\n\n  return els;\n}\n\nfunction getPathAttributes(node, defaultItem) {\n  var item = _extends({\n    trans: {\n      rotate: [360, 12, 12]\n    },\n    transStr: 'rotate(360 12 12)'\n  }, defaultItem);\n\n  if (!node || !node.name) {\n    return false;\n  }\n\n  var nodeName = node.name.toUpperCase();\n\n  switch (nodeName) {\n    case 'PATH':\n      item.path = node.attributes.d;\n      break;\n\n    case 'CIRCLE':\n      item.path = PathConverter.fromCircle(node.attributes);\n      break;\n\n    case 'ELLIPSE':\n      item.path = PathConverter.fromEllipse(node.attributes);\n      break;\n\n    case 'RECT':\n      item.path = PathConverter.fromRect(node.attributes);\n      break;\n\n    case 'POLYGON':\n      item.path = PathConverter.fromPolygon(node.attributes);\n      break;\n\n    case 'LINE':\n      item.path = PathConverter.fromLine(node.attributes);\n      break;\n\n    default:\n      return false;\n  }\n\n  var attrs = readAttrs(node);\n  var style = readStyles(node);\n  item.attrs = _extends({}, item.attrs, attrs);\n  item.style = _extends({}, item.style, style);\n  return item;\n}\n\nfunction findSvgRoot(node) {\n  if (!node || !node.name || node.name.toUpperCase() !== \"SVG\") {\n    return node.children.find(function (child) {\n      return findSvgRoot(child);\n    });\n  }\n\n  return node;\n}\n\nfunction extractSvgPaths(root) {\n  var svgRoot = findSvgRoot(root);\n  var children = getAllChildren(svgRoot);\n\n  var svg = _extends({}, svgRoot.attributes);\n\n  var rootAttr = readAttrs(svgRoot);\n  var rootStyles = readStyles(svgRoot);\n  svg.paths = [];\n  children.forEach(function (child) {\n    var item = getPathAttributes(child, {\n      attrs: _extends({}, rootAttr, readAttrs(child)),\n      styles: _extends({}, rootStyles, readStyles(child))\n    });\n\n    if (item) {\n      svg.paths.push(item);\n    }\n  });\n  return svg;\n}","map":{"version":3,"sources":["/Users/alberto.ramos/Documents/Personal/GitHub/Website3D/node_modules/react-svg-morph/lib/utils/normalizeSvg.js"],"names":["Object","defineProperty","exports","value","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","length","err","Array","isArray","TypeError","_extends","assign","target","arguments","source","key","prototype","hasOwnProperty","call","readAttrs","parseStyles","readStyles","getAllChildren","getPathAttributes","findSvgRoot","extractSvgPaths","_interopRequireWildcard","obj","__esModule","newObj","_pathConverter","require","PathConverter","node","attrs","attributes","keys","forEach","_key","val","toLowerCase","styleString","map","prop","split","declaration","_declaration$split$map","p","replace","_declaration$split$map2","style","_ref","els","children","len","el","filter","Boolean","concat","defaultItem","item","trans","rotate","transStr","name","nodeName","toUpperCase","path","d","fromCircle","fromEllipse","fromRect","fromPolygon","fromLine","find","child","root","svgRoot","svg","rootAttr","rootStyles","paths","styles"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.readAttrs = readAttrs;\nexports.parseStyles = parseStyles;\nexports.readStyles = readStyles;\nexports.getAllChildren = getAllChildren;\nexports.getPathAttributes = getPathAttributes;\nexports['default'] = findSvgRoot;\nexports['default'] = extractSvgPaths;\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nvar _pathConverter = require('./pathConverter');\n\nvar PathConverter = _interopRequireWildcard(_pathConverter);\n\nfunction readAttrs(node) {\n    var attrs = {};\n    if (!node.attributes) {\n        return attrs;\n    }\n    Object.keys(node.attributes).forEach(function (_key) {\n        var val = node.attributes[_key];\n        var key = _key.toLowerCase();\n        switch (key) {\n            case 'fill':\n            case 'fill-opacity':\n            case 'opacity':\n            case 'stroke':\n            case 'stroke-opacity':\n            case 'stroke-width':\n                attrs[key] = val;\n        }\n    });\n    return attrs;\n}\n\nfunction parseStyles(styleString) {\n    if (!styleString) {\n        return [];\n    }\n    if (typeof styleString === \"object\") {\n        return Object.keys(styleString).map(function (key) {\n            return {\n                prop: key,\n                val: styleString[key]\n            };\n        });\n    }\n    return styleString.split(';').map(function (declaration) {\n        var _declaration$split$map = declaration.split(':').map(function (p) {\n            return p.replace(' ', '');\n        });\n\n        var _declaration$split$map2 = _slicedToArray(_declaration$split$map, 2);\n\n        var prop = _declaration$split$map2[0];\n        var val = _declaration$split$map2[1];\n\n        return {\n            prop: prop,\n            val: val\n        };\n    });\n}\n\nfunction readStyles(node) {\n    var style = {};\n    if (!node.attributes || !node.attributes.style) {\n        return {};\n    }\n    parseStyles(node.attributes.style).forEach(function (_ref) {\n        var val = _ref.val;\n        var key = _ref.key;\n\n        switch (key) {\n            case 'fill':\n            case 'fill-opacity':\n            case 'opacity':\n            case 'stroke':\n            case 'stroke-opacity':\n            case 'stroke-width':\n                style[key] = val;\n        }\n    });\n    return style;\n}\n\nfunction getAllChildren(node) {\n    var i = 0;\n    var els = [];\n    if (!node.children) {\n        return els;\n    }\n    var len = node.children.length;\n    for (; i < len; i++) {\n        var el = node.children[i];\n        els.push(el);\n        if (el.children && el.children.filter(Boolean).length > 0) {\n            els = els.concat(getAllChildren(el));\n        }\n    }\n\n    return els;\n}\n\nfunction getPathAttributes(node, defaultItem) {\n    var item = _extends({\n        trans: {\n            rotate: [360, 12, 12]\n        },\n        transStr: 'rotate(360 12 12)'\n    }, defaultItem);\n\n    if (!node || !node.name) {\n        return false;\n    }\n\n    var nodeName = node.name.toUpperCase();\n    switch (nodeName) {\n        case 'PATH':\n            item.path = node.attributes.d;\n            break;\n        case 'CIRCLE':\n            item.path = PathConverter.fromCircle(node.attributes);\n            break;\n        case 'ELLIPSE':\n            item.path = PathConverter.fromEllipse(node.attributes);\n            break;\n        case 'RECT':\n            item.path = PathConverter.fromRect(node.attributes);\n            break;\n        case 'POLYGON':\n            item.path = PathConverter.fromPolygon(node.attributes);\n            break;\n        case 'LINE':\n            item.path = PathConverter.fromLine(node.attributes);\n            break;\n        default:\n            return false;\n    }\n    var attrs = readAttrs(node);\n    var style = readStyles(node);\n    item.attrs = _extends({}, item.attrs, attrs);\n    item.style = _extends({}, item.style, style);\n    return item;\n}\n\nfunction findSvgRoot(node) {\n    if (!node || !node.name || node.name.toUpperCase() !== \"SVG\") {\n        return node.children.find(function (child) {\n            return findSvgRoot(child);\n        });\n    }\n\n    return node;\n}\n\nfunction extractSvgPaths(root) {\n    var svgRoot = findSvgRoot(root);\n    var children = getAllChildren(svgRoot);\n    var svg = _extends({}, svgRoot.attributes);\n    var rootAttr = readAttrs(svgRoot);\n    var rootStyles = readStyles(svgRoot);\n\n    svg.paths = [];\n    children.forEach(function (child) {\n\n        var item = getPathAttributes(child, {\n            attrs: _extends({}, rootAttr, readAttrs(child)),\n            styles: _extends({}, rootStyles, readStyles(child))\n        });\n        if (item) {\n            svg.paths.push(item);\n        }\n    });\n\n    return svg;\n}"]},"metadata":{},"sourceType":"script"}