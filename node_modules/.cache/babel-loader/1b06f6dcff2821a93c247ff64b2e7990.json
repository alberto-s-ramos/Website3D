{"ast":null,"code":"var _jsxFileName = \"/Users/alberto.ramos/Documents/Personal/GitHub/Website3D/src/components/HtmlContent.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport { Html } from \"drei\";\nimport Model from \"./model\";\nimport { useFrame } from \"react-three-fiber\";\nimport { useInView } from \"react-intersection-observer\";\n\nfunction HTMLContent({\n  yPosition,\n  gltfPath,\n  bgColor,\n  rightSide,\n  ...props\n}) {\n  const ref = useRef();\n  useFrame(() => rightSide ? ref.current.rotation.y -= 0.002 : ref.current.rotation.y += 0.002);\n  const [refItem, inView] = useInView({\n    threshold: 0\n  });\n  useEffect(() => {\n    inView && (document.body.style.background = bgColor);\n  }, [inView]);\n  const xPosition = rightSide ? 75 : -75;\n  const styleContainer = rightSide ? \"gameDetailsRightContainer\" : \"gameDetailsLeftContainer\";\n  const styleChild = rightSide ? \"gameDetailsRight\" : \"gameDetailsLeft\";\n  return /*#__PURE__*/React.createElement(\"group\", {\n    position: [0, yPosition, 0],\n    x: xPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: ref,\n    position: [xPosition, -10, 0],\n    scale: [0.9, 0.9, 0.9],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Model, {\n    gltfPath: gltfPath,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Html, {\n    portal: props.domContent,\n    fullscreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: refItem,\n    className: styleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styleChild,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  }, props.children)))));\n}\n\nexport default HTMLContent;","map":{"version":3,"sources":["/Users/alberto.ramos/Documents/Personal/GitHub/Website3D/src/components/HtmlContent.js"],"names":["React","useEffect","useRef","Html","Model","useFrame","useInView","HTMLContent","yPosition","gltfPath","bgColor","rightSide","props","ref","current","rotation","y","refItem","inView","threshold","document","body","style","background","xPosition","styleContainer","styleChild","domContent","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,SAAT,QAA0B,6BAA1B;;AAGA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,QAAb;AAAuBC,EAAAA,OAAvB;AAAgCC,EAAAA,SAAhC;AAA2C,KAAGC;AAA9C,CAArB,EAA4E;AAExE,QAAMC,GAAG,GAAGX,MAAM,EAAlB;AACAG,EAAAA,QAAQ,CAAC,MAAOM,SAAS,GAAGE,GAAG,CAACC,OAAJ,CAAYC,QAAZ,CAAqBC,CAArB,IAA0B,KAA7B,GAAqCH,GAAG,CAACC,OAAJ,CAAYC,QAAZ,CAAqBC,CAArB,IAA0B,KAAhF,CAAR;AACA,QAAM,CAACC,OAAD,EAAUC,MAAV,IAAoBZ,SAAS,CAAC;AAChCa,IAAAA,SAAS,EAAE;AADqB,GAAD,CAAnC;AAGAlB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,MAAM,KAAKE,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,UAApB,GAAiCb,OAAtC,CAAN;AACH,GAFQ,EAEN,CAACQ,MAAD,CAFM,CAAT;AAIA,QAAMM,SAAS,GAAGb,SAAS,GAAG,EAAH,GAAQ,CAAC,EAApC;AAEA,QAAMc,cAAc,GAAGd,SAAS,GAAG,2BAAH,GAAiC,0BAAjE;AACA,QAAMe,UAAU,GAAGf,SAAS,GAAG,kBAAH,GAAwB,iBAApD;AAEA,sBACQ;AAAO,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAIH,SAAJ,EAAe,CAAf,CAAjB;AAAoC,IAAA,CAAC,EAAEgB,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAM,IAAA,GAAG,EAAEX,GAAX;AAAgB,IAAA,QAAQ,EAAE,CAACW,SAAD,EAAY,CAAC,EAAb,EAAiB,CAAjB,CAA1B;AAA+C,IAAA,KAAK,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAEf,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,CAFJ,eAOI,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEG,KAAK,CAACe,UAApB;AAAgC,IAAA,UAAU,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEV,OAAV;AAAmB,IAAA,SAAS,EAAEQ,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMd,KAAK,CAACgB,QAAZ,CADJ,CADJ,CADJ,CAPJ,CADR;AAkBH;;AAED,eAAerB,WAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { Html } from \"drei\";\nimport Model from \"./model\"\nimport { useFrame } from \"react-three-fiber\";\nimport { useInView } from \"react-intersection-observer\";\n\n\nfunction HTMLContent({ yPosition, gltfPath, bgColor, rightSide, ...props }) {\n\n    const ref = useRef()\n    useFrame(() => (rightSide ? ref.current.rotation.y -= 0.002 : ref.current.rotation.y += 0.002))\n    const [refItem, inView] = useInView({\n        threshold: 0\n    })\n    useEffect(() => {\n        inView && (document.body.style.background = bgColor)\n    }, [inView])\n\n    const xPosition = rightSide ? 75 : -75\n\n    const styleContainer = rightSide ? \"gameDetailsRightContainer\" : \"gameDetailsLeftContainer\"\n    const styleChild = rightSide ? \"gameDetailsRight\" : \"gameDetailsLeft\"\n\n    return(\n            <group position={[0, yPosition, 0]} x={xPosition}>\n\n                <mesh ref={ref} position={[xPosition, -10, 0]} scale={[0.9,0.9,0.9]}> \n                        <Model gltfPath={gltfPath}></Model>\n                </mesh>\n\n                    \n                <Html portal={props.domContent} fullscreen>\n                    <div ref={refItem} className={styleContainer}>\n                        <div className={styleChild}>\n                            <div>{props.children}</div>\n                        </div>\n                    </div>\n                </Html>\n\n            </group>\n    )\n}\n\nexport default HTMLContent\n"]},"metadata":{},"sourceType":"module"}