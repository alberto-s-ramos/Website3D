{"ast":null,"code":"var _jsxFileName = \"/Users/alberto/Projects/Personal/Website3D/src/components/Email.js\";\nimport React, { useRef, useState } from 'react';\nimport emailjs from '@emailjs/browser';\nimport \"../style/Email.scss\";\nexport const Email = () => {\n  const [subjectText, setSubjectText] = useState('');\n  const [emailText, setEmailText] = useState('');\n  const [contentText, setContentText] = useState('');\n  const [emailSent, setEmailSent] = useState(false);\n  const form = useRef();\n  const subjectInput = useRef();\n  const emailInput = useRef();\n  const contentInput = useRef();\n\n  const sendEmail = e => {\n    e.preventDefault();\n    console.log(validateFields());\n\n    if (validateFields) {\n      console.log(\"Ill send!!!!\");\n      emailjs.sendForm('service_lpht0s5', 'template_m8yj6bk', form.current, 'Ng_lvRzLCb008pGkw').then(result => {\n        console.log(`Email sent. HTTP Status: ${result.status}`);\n        setEmailSent(true);\n        clearFields();\n      }, error => {\n        console.log(error.text);\n      });\n    }\n  };\n\n  const validateFields = () => {\n    let toReturn;\n\n    if (subjectText === '') {\n      console.log('Please add a Subject');\n      subjectInput.current.classList.add(\"required--unset\");\n      toReturn = false;\n    }\n\n    if (emailText === '') {\n      console.log('Please add your Email');\n      toReturn = false;\n    }\n\n    if (contentText === '') {\n      console.log('Please add write something kind');\n      toReturn = false;\n    }\n\n    if (contentText !== '' && emailSent !== '' && contentText !== '') toReturn = true;\n    return toReturn;\n  };\n\n  const clearFields = () => {\n    setSubjectText('');\n    setEmailText('');\n    setContentText('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"email\",\n    ref: form,\n    onSubmit: sendEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: subjectInput,\n    className: \"email__subject\",\n    type: \"text\",\n    name: \"subject\",\n    placeholder: \"Subject\",\n    value: subjectText,\n    onChange: e => setSubjectText(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    ref: emailInput,\n    className: \"email__id\",\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    value: emailText,\n    onChange: e => setEmailText(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"email__sendBtn\",\n    type: \"submit\",\n    value: \"Send\",\n    disabled: emailSent ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: contentInput,\n    className: \"email__content\",\n    name: \"message\",\n    placeholder: \"Message\",\n    value: contentText,\n    onChange: e => setContentText(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/alberto/Projects/Personal/Website3D/src/components/Email.js"],"names":["React","useRef","useState","emailjs","Email","subjectText","setSubjectText","emailText","setEmailText","contentText","setContentText","emailSent","setEmailSent","form","subjectInput","emailInput","contentInput","sendEmail","e","preventDefault","console","log","validateFields","sendForm","current","then","result","status","clearFields","error","text","toReturn","classList","add","target","value"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport emailjs from '@emailjs/browser';\nimport \"../style/Email.scss\";\n\n\nexport const Email = () => {\n    const [subjectText, setSubjectText] = useState('');\n    const [emailText, setEmailText] = useState('');\n    const [contentText, setContentText] = useState('');\n    const [emailSent, setEmailSent] = useState(false);\n\n    const form = useRef();\n    const subjectInput = useRef();\n    const emailInput = useRef();\n    const contentInput = useRef();\n\n\n    const sendEmail = (e) => {\n        e.preventDefault();\n        console.log(validateFields())\n        if(validateFields){\n            console.log(\"Ill send!!!!\")\n            emailjs.sendForm('service_lpht0s5', 'template_m8yj6bk', form.current, 'Ng_lvRzLCb008pGkw')\n            .then((result) => {\n                console.log(`Email sent. HTTP Status: ${result.status}`);\n                setEmailSent(true);\n                clearFields();\n            }, (error) => {\n                console.log(error.text);\n            });\n        }\n    };\n\n    const validateFields = () => {\n        let toReturn;\n        if(subjectText === '') { \n            console.log('Please add a Subject'); \n            subjectInput.current.classList.add(\"required--unset\")\n            toReturn = false;\n        } \n        if(emailText === '') { console.log('Please add your Email'); toReturn = false } \n        if(contentText === '') { console.log('Please add write something kind'); toReturn = false } \n        if(contentText !== '' && emailSent !== '' && contentText !== '') toReturn = true;\n        return toReturn;\n    }\n\n    const clearFields = () => {\n        setSubjectText('');\n        setEmailText('');\n        setContentText('');\n    }\n\n    return (\n        <form className=\"email\" ref={form} onSubmit={sendEmail}>\n            <input \n                ref={subjectInput}\n                className=\"email__subject\"\n                type=\"text\" \n                name=\"subject\" \n                placeholder='Subject' \n                value={subjectText}\n                onChange={ e => setSubjectText(e.target.value)}/>\n            <input \n                ref={emailInput}\n                className=\"email__id\" \n                type=\"email\" name=\"email\" \n                placeholder='Email' \n                value={emailText}\n                onChange={ e => setEmailText(e.target.value)}/>\n            <input className=\"email__sendBtn\" \n                type=\"submit\" \n                value=\"Send\" \n                disabled={emailSent ? true : false}/>\n            <textarea \n                ref={contentInput}\n                className=\"email__content\" \n                name=\"message\" \n                placeholder='Message' \n                value={contentText}\n                onChange={ e => setContentText(e.target.value)}/>\n        </form>\n    );\n};"]},"metadata":{},"sourceType":"module"}