{"ast":null,"code":"var _jsxFileName = \"/Users/alberto.ramos/Documents/Personal/GitHub/Website3D/src/components/Skills2.js\";\nimport React from 'react';\nimport \"../style/Skills.scss\";\nconst elts = {\n  text1: document.getElementById(\"text1\"),\n  text2: document.getElementById(\"text2\")\n}; // The strings to morph between. You can change these to anything you want!\n\nconst texts = [\"React\", \"Kotlin\", \"Spring\", \"Java\"]; // Controls the speed of morphing.\n\nconst morphTime = 1;\nconst cooldownTime = 0.4;\nlet textIndex = texts.length - 1;\nlet time = new Date();\nlet morph = 0;\nlet cooldown = cooldownTime;\nelts.text1.textContent = texts[textIndex % texts.length];\nelts.text2.textContent = texts[(textIndex + 1) % texts.length];\n\nfunction doMorph() {\n  morph -= cooldown;\n  cooldown = 0;\n  let fraction = morph / morphTime;\n\n  if (fraction > 1) {\n    cooldown = cooldownTime;\n    fraction = 1;\n  }\n\n  setMorph(fraction);\n} // A lot of the magic happens here, this is what applies the blur filter to the text.\n\n\nfunction setMorph(fraction) {\n  // fraction = Math.cos(fraction * Math.PI) / -2 + .5;\n  elts.text2.style.filter = `blur(${Math.min(8 / fraction - 8, 100)}px)`;\n  elts.text2.style.opacity = `${Math.pow(fraction, 0.4) * 100}%`;\n  fraction = 1 - fraction;\n  elts.text1.style.filter = `blur(${Math.min(8 / fraction - 8, 100)}px)`;\n  elts.text1.style.opacity = `${Math.pow(fraction, 0.4) * 100}%`;\n  elts.text1.textContent = texts[textIndex % texts.length];\n  elts.text2.textContent = texts[(textIndex + 1) % texts.length];\n}\n\nfunction doCooldown() {\n  morph = 0;\n  elts.text2.style.filter = \"\";\n  elts.text2.style.opacity = \"100%\";\n  elts.text1.style.filter = \"\";\n  elts.text1.style.opacity = \"0%\";\n} // Animation loop, which is called every frame.\n\n\nfunction animate() {\n  requestAnimationFrame(animate);\n  let newTime = new Date();\n  let shouldIncrementIndex = cooldown > 0;\n  let dt = (newTime - time) / 1000;\n  time = newTime;\n  cooldown -= dt;\n\n  if (cooldown <= 0) {\n    if (shouldIncrementIndex) {\n      textIndex++;\n    }\n\n    doMorph();\n  } else {\n    doCooldown();\n  }\n}\n\nfunction Skills2() {\n  animate();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"skills-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"text1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"text2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"svg\", {\n    id: \"filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"defs\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"threshold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceGraphic\",\n    type: \"matrix\",\n    values: \"1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 255 -140\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  })))));\n}\n\nexport default Skills2;","map":{"version":3,"sources":["/Users/alberto.ramos/Documents/Personal/GitHub/Website3D/src/components/Skills2.js"],"names":["React","elts","text1","document","getElementById","text2","texts","morphTime","cooldownTime","textIndex","length","time","Date","morph","cooldown","textContent","doMorph","fraction","setMorph","style","filter","Math","min","opacity","pow","doCooldown","animate","requestAnimationFrame","newTime","shouldIncrementIndex","dt","Skills2"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport \"../style/Skills.scss\";\n\nconst elts = {\n\ttext1: document.getElementById(\"text1\"),\n\ttext2: document.getElementById(\"text2\")\n};\n\n// The strings to morph between. You can change these to anything you want!\nconst texts = [\n\t\"React\",\n\t\"Kotlin\",\n\t\"Spring\",\n\t\"Java\",\n];\n\n// Controls the speed of morphing.\nconst morphTime = 1;\nconst cooldownTime = 0.4;\n\nlet textIndex = texts.length - 1;\nlet time = new Date();\nlet morph = 0;\nlet cooldown = cooldownTime;\n\nelts.text1.textContent = texts[textIndex % texts.length];\nelts.text2.textContent = texts[(textIndex + 1) % texts.length];\n\nfunction doMorph() {\n\tmorph -= cooldown;\n\tcooldown = 0;\n\t\n\tlet fraction = morph / morphTime;\n\t\n\tif (fraction > 1) {\n\t\tcooldown = cooldownTime;\n\t\tfraction = 1;\n\t}\n\t\n\tsetMorph(fraction);\n}\n\n// A lot of the magic happens here, this is what applies the blur filter to the text.\nfunction setMorph(fraction) {\n\t// fraction = Math.cos(fraction * Math.PI) / -2 + .5;\n\t\n\telts.text2.style.filter = `blur(${Math.min(8 / fraction - 8, 100)}px)`;\n\telts.text2.style.opacity = `${Math.pow(fraction, 0.4) * 100}%`;\n\t\n\tfraction = 1 - fraction;\n\telts.text1.style.filter = `blur(${Math.min(8 / fraction - 8, 100)}px)`;\n\telts.text1.style.opacity = `${Math.pow(fraction, 0.4) * 100}%`;\n\t\n\telts.text1.textContent = texts[textIndex % texts.length];\n\telts.text2.textContent = texts[(textIndex + 1) % texts.length];\n}\n\nfunction doCooldown() {\n\tmorph = 0;\n\t\n\telts.text2.style.filter = \"\";\n\telts.text2.style.opacity = \"100%\";\n\t\n\telts.text1.style.filter = \"\";\n\telts.text1.style.opacity = \"0%\";\n}\n\n// Animation loop, which is called every frame.\nfunction animate() {\n\trequestAnimationFrame(animate);\n\t\n\tlet newTime = new Date();\n\tlet shouldIncrementIndex = cooldown > 0;\n\tlet dt = (newTime - time) / 1000;\n\ttime = newTime;\n\t\n\tcooldown -= dt;\n\t\n\tif (cooldown <= 0) {\n\t\tif (shouldIncrementIndex) {\n\t\t\ttextIndex++;\n\t\t}\n\t\t\n\t\tdoMorph();\n\t} else {\n\t\tdoCooldown();\n\t}\n}\n\n\nfunction Skills2() {\n    animate()\n    return (\n        <div>\n            <div id=\"skills-container\">\n                <span id=\"text1\"></span>\n                <span id=\"text2\"></span>\n            </div>\n            <svg id=\"filters\">\n                <defs>\n                    <filter id=\"threshold\">\n                        <feColorMatrix in=\"SourceGraphic\"\n                                type=\"matrix\"\n                                values=\"1 0 0 0 0\n                                                0 1 0 0 0\n                                                0 0 1 0 0\n                                                0 0 0 255 -140\" />\n                    </filter>\n                </defs>\n            </svg>\n        </div>\n    )\n}\nexport default Skills2"]},"metadata":{},"sourceType":"module"}