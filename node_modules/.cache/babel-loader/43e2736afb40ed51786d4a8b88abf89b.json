{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.normalizePaths = normalizePaths;\nexports.getProgress = getProgress;\n\nvar _svglite = require('./svglite');\n\nvar _helpers = require('./helpers');\n\nfunction normalizePaths(fromPaths, toPaths, _options) {\n  var options = _options || {};\n  var max = Math.max(fromPaths.length, toPaths.length);\n  var toBB, i;\n\n  for (i = 0; i < max; i++) {\n    if (!fromPaths[i]) {\n      if (!!toPaths[i]) {\n        toBB = (0, _svglite.curvePathBBox)((0, _svglite.path2curve)(toPaths[i].path));\n        fromPaths.push({\n          path: 'M' + toBB.cx + ',' + toBB.cy + 'l0,0',\n          attrs: {},\n          style: {},\n          trans: {\n            rotate: [0, toBB.cx, toBB.cy]\n          }\n        });\n      } else {\n        fromPaths.push({\n          path: 'M0,0l0,0',\n          attrs: {},\n          style: {},\n          trans: {\n            rotate: [0, 0, 0]\n          }\n        });\n      }\n    }\n\n    if (!toPaths[i]) {\n      if (!!fromPaths[i]) {\n        toBB = (0, _svglite.curvePathBBox)((0, _svglite.path2curve)(fromPaths[i].path));\n        toPaths.push({\n          path: 'M' + toBB.cx + ',' + toBB.cy + 'l0,0',\n          attrs: {},\n          style: {},\n          trans: {\n            rotate: [0, toBB.cx, toBB.cy]\n          }\n        });\n      } else {\n        toPaths.push({\n          path: 'M0,0l0,0',\n          attrs: {},\n          style: {},\n          trans: {\n            rotate: [0, 0, 0]\n          }\n        });\n      }\n    }\n  }\n\n  for (i = 0; i < max; i++) {\n    var fromIconItem = fromPaths[i];\n    var toIconItem = toPaths[i]; // Calculate from/to curve data and set to fromIcon/toIcon\n\n    var curves = (0, _svglite.path2curve)(fromPaths[i].path, toPaths[i].path);\n    fromIconItem.curve = curves[0];\n    toIconItem.curve = curves[1]; // Normalize from/to attrs\n\n    var attrsNorm = (0, _helpers.styleToNorm)(fromPaths[i].attrs, toPaths[i].attrs);\n    fromIconItem.attrsNorm = attrsNorm[0];\n    toIconItem.attrsNorm = attrsNorm[1];\n    fromIconItem.attrs = (0, _helpers.styleNormToString)(fromIconItem.attrsNorm);\n    toIconItem.attrs = (0, _helpers.styleNormToString)(toIconItem.attrsNorm); // Normalize from/to style\n\n    var styleNorm = (0, _helpers.styleToNorm)(fromPaths[i].style, toPaths[i].style);\n    fromIconItem.styleNorm = styleNorm[0];\n    toIconItem.styleNorm = styleNorm[1];\n    fromIconItem.style = (0, _helpers.styleNormToString)(fromIconItem.styleNorm);\n    toIconItem.style = (0, _helpers.styleNormToString)(toIconItem.styleNorm); // Calculate from/to transform\n\n    toBB = (0, _svglite.curvePathBBox)(toIconItem.curve);\n    toIconItem.trans = {\n      rotate: [0, toBB.cx, toBB.cy]\n    }; // TODO rotation accept\n\n    var rotation = options.rotation,\n        degAdd = undefined;\n\n    if (rotation === 'random') {\n      rotation = Math.random() < 0.5 ? 'counterclock' : 'clock';\n    }\n\n    switch (rotation) {\n      case 'none':\n        if (!!fromIconItem.trans.rotate) {\n          toIconItem.trans.rotate[0] = fromIconItem.trans.rotate[0];\n        }\n\n        break;\n\n      case 'counterclock':\n        if (!!fromIconItem.trans.rotate) {\n          toIconItem.trans.rotate[0] = fromIconItem.trans.rotate[0] - 360;\n          degAdd = -fromIconItem.trans.rotate[0] % 360;\n          toIconItem.trans.rotate[0] += degAdd < 180 ? degAdd : degAdd - 360;\n        } else {\n          toIconItem.trans.rotate[0] = -360;\n        }\n\n        break;\n\n      default:\n        // Clockwise\n        if (!!fromIconItem.trans.rotate) {\n          toIconItem.trans.rotate[0] = fromIconItem.trans.rotate[0] + 360;\n          degAdd = fromIconItem.trans.rotate[0] % 360;\n          toIconItem.trans.rotate[0] += degAdd < 180 ? -degAdd : 360 - degAdd;\n        } else {\n          toIconItem.trans.rotate[0] = 360;\n        }\n\n        break;\n    }\n  }\n\n  return {\n    to: toPaths,\n    from: fromPaths\n  };\n}\n\nfunction getProgress(fromPaths, toPaths, progress) {\n  // TODO easing\n  // progress=easings[this._easing](progress);\n  var i = 0;\n  var newPaths = [];\n  var len = fromPaths.length; // Update path/attrs/transform\n\n  for (; i < len; i++) {\n    newPaths[i] = {};\n    newPaths[i].curve = (0, _helpers.curveCalc)(fromPaths[i].curve, toPaths[i].curve, progress);\n    newPaths[i].path = (0, _svglite.path2string)(newPaths[i].curve);\n    newPaths[i].attrsNorm = (0, _helpers.styleNormCalc)(fromPaths[i].attrsNorm, toPaths[i].attrsNorm, progress);\n    newPaths[i].attrs = (0, _helpers.styleNormToString)(newPaths[i].attrsNorm);\n    newPaths[i].styleNorm = (0, _helpers.styleNormCalc)(fromPaths[i].styleNorm, toPaths[i].styleNorm, progress);\n    newPaths[i].style = (0, _helpers.styleNormToString)(newPaths[i].styleNorm);\n    newPaths[i].trans = (0, _helpers.transCalc)(fromPaths[i].trans, toPaths[i].trans, progress);\n    newPaths[i].transStr = (0, _helpers.trans2string)(newPaths[i].trans);\n  }\n\n  return newPaths;\n}","map":{"version":3,"sources":["/Users/alberto.ramos/Documents/Personal/GitHub/Website3D/node_modules/react-svg-morph/lib/utils/morph.js"],"names":["Object","defineProperty","exports","value","normalizePaths","getProgress","_svglite","require","_helpers","fromPaths","toPaths","_options","options","max","Math","length","toBB","i","curvePathBBox","path2curve","path","push","cx","cy","attrs","style","trans","rotate","fromIconItem","toIconItem","curves","curve","attrsNorm","styleToNorm","styleNormToString","styleNorm","rotation","degAdd","undefined","random","to","from","progress","newPaths","len","curveCalc","path2string","styleNormCalc","transCalc","transStr","trans2string"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nexports.normalizePaths = normalizePaths;\nexports.getProgress = getProgress;\n\nvar _svglite = require('./svglite');\n\nvar _helpers = require('./helpers');\n\nfunction normalizePaths(fromPaths, toPaths, _options) {\n    var options = _options || {};\n    var max = Math.max(fromPaths.length, toPaths.length);\n    var toBB, i;\n\n    for (i = 0; i < max; i++) {\n        if (!fromPaths[i]) {\n            if (!!toPaths[i]) {\n                toBB = (0, _svglite.curvePathBBox)((0, _svglite.path2curve)(toPaths[i].path));\n                fromPaths.push({\n                    path: 'M' + toBB.cx + ',' + toBB.cy + 'l0,0',\n                    attrs: {},\n                    style: {},\n                    trans: {\n                        rotate: [0, toBB.cx, toBB.cy]\n                    }\n                });\n            } else {\n                fromPaths.push({\n                    path: 'M0,0l0,0',\n                    attrs: {},\n                    style: {},\n                    trans: {\n                        rotate: [0, 0, 0]\n                    }\n                });\n            }\n        }\n\n        if (!toPaths[i]) {\n            if (!!fromPaths[i]) {\n                toBB = (0, _svglite.curvePathBBox)((0, _svglite.path2curve)(fromPaths[i].path));\n                toPaths.push({\n                    path: 'M' + toBB.cx + ',' + toBB.cy + 'l0,0',\n                    attrs: {},\n                    style: {},\n                    trans: {\n                        rotate: [0, toBB.cx, toBB.cy]\n                    }\n                });\n            } else {\n                toPaths.push({\n                    path: 'M0,0l0,0',\n                    attrs: {},\n                    style: {},\n                    trans: {\n                        rotate: [0, 0, 0]\n                    }\n                });\n            }\n        }\n    }\n\n    for (i = 0; i < max; i++) {\n        var fromIconItem = fromPaths[i];\n        var toIconItem = toPaths[i];\n\n        // Calculate from/to curve data and set to fromIcon/toIcon\n        var curves = (0, _svglite.path2curve)(fromPaths[i].path, toPaths[i].path);\n        fromIconItem.curve = curves[0];\n        toIconItem.curve = curves[1];\n        // Normalize from/to attrs\n        var attrsNorm = (0, _helpers.styleToNorm)(fromPaths[i].attrs, toPaths[i].attrs);\n        fromIconItem.attrsNorm = attrsNorm[0];\n        toIconItem.attrsNorm = attrsNorm[1];\n        fromIconItem.attrs = (0, _helpers.styleNormToString)(fromIconItem.attrsNorm);\n        toIconItem.attrs = (0, _helpers.styleNormToString)(toIconItem.attrsNorm);\n\n        // Normalize from/to style\n        var styleNorm = (0, _helpers.styleToNorm)(fromPaths[i].style, toPaths[i].style);\n        fromIconItem.styleNorm = styleNorm[0];\n        toIconItem.styleNorm = styleNorm[1];\n        fromIconItem.style = (0, _helpers.styleNormToString)(fromIconItem.styleNorm);\n        toIconItem.style = (0, _helpers.styleNormToString)(toIconItem.styleNorm);\n\n        // Calculate from/to transform\n        toBB = (0, _svglite.curvePathBBox)(toIconItem.curve);\n        toIconItem.trans = {\n            rotate: [0, toBB.cx, toBB.cy]\n        };\n        // TODO rotation accept\n        var rotation = options.rotation,\n            degAdd = undefined;\n        if (rotation === 'random') {\n            rotation = Math.random() < 0.5 ? 'counterclock' : 'clock';\n        }\n        switch (rotation) {\n            case 'none':\n                if (!!fromIconItem.trans.rotate) {\n                    toIconItem.trans.rotate[0] = fromIconItem.trans.rotate[0];\n                }\n                break;\n            case 'counterclock':\n                if (!!fromIconItem.trans.rotate) {\n                    toIconItem.trans.rotate[0] = fromIconItem.trans.rotate[0] - 360;\n                    degAdd = -fromIconItem.trans.rotate[0] % 360;\n                    toIconItem.trans.rotate[0] += degAdd < 180 ? degAdd : degAdd - 360;\n                } else {\n                    toIconItem.trans.rotate[0] = -360;\n                }\n                break;\n            default:\n                // Clockwise\n                if (!!fromIconItem.trans.rotate) {\n                    toIconItem.trans.rotate[0] = fromIconItem.trans.rotate[0] + 360;\n                    degAdd = fromIconItem.trans.rotate[0] % 360;\n                    toIconItem.trans.rotate[0] += degAdd < 180 ? -degAdd : 360 - degAdd;\n                } else {\n                    toIconItem.trans.rotate[0] = 360;\n                }\n                break;\n        }\n    }\n\n    return {\n        to: toPaths,\n        from: fromPaths\n    };\n}\n\nfunction getProgress(fromPaths, toPaths, progress) {\n    // TODO easing\n    // progress=easings[this._easing](progress);\n    var i = 0;\n    var newPaths = [];\n    var len = fromPaths.length;\n    // Update path/attrs/transform\n    for (; i < len; i++) {\n        newPaths[i] = {};\n        newPaths[i].curve = (0, _helpers.curveCalc)(fromPaths[i].curve, toPaths[i].curve, progress);\n        newPaths[i].path = (0, _svglite.path2string)(newPaths[i].curve);\n\n        newPaths[i].attrsNorm = (0, _helpers.styleNormCalc)(fromPaths[i].attrsNorm, toPaths[i].attrsNorm, progress);\n        newPaths[i].attrs = (0, _helpers.styleNormToString)(newPaths[i].attrsNorm);\n\n        newPaths[i].styleNorm = (0, _helpers.styleNormCalc)(fromPaths[i].styleNorm, toPaths[i].styleNorm, progress);\n        newPaths[i].style = (0, _helpers.styleNormToString)(newPaths[i].styleNorm);\n\n        newPaths[i].trans = (0, _helpers.transCalc)(fromPaths[i].trans, toPaths[i].trans, progress);\n        newPaths[i].transStr = (0, _helpers.trans2string)(newPaths[i].trans);\n    }\n\n    return newPaths;\n}"]},"metadata":{},"sourceType":"script"}