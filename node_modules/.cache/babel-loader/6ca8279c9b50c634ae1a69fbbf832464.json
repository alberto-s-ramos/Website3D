{"ast":null,"code":"var _jsxFileName = \"/Users/alberto/Projects/Personal/Website3D/src/components/Particles2.js\";\nimport React from 'react';\nimport Particles from 'react-tsparticles';\nimport { loadFull } from \"tsparticles\";\nexport const Particles2 = props => {\n  const particlesInit = async main => {\n    console.log(main); // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n\n    await loadFull(main);\n  };\n\n  const particlesLoaded = container => {\n    console.log(container);\n  };\n\n  return /*#__PURE__*/React.createElement(Particles, {\n    id: \"tsparticles\",\n    init: particlesInit,\n    loaded: particlesLoaded,\n    options: {\n      background: {\n        color: {\n          value: \"#0d47a1\"\n        }\n      },\n      fpsLimit: 120,\n      interactivity: {\n        events: {\n          onClick: {\n            enable: true,\n            mode: \"push\"\n          },\n          onHover: {\n            enable: true,\n            mode: \"repulse\"\n          },\n          resize: true\n        },\n        modes: {\n          push: {\n            quantity: 4\n          },\n          repulse: {\n            distance: 200,\n            duration: 0.4\n          }\n        }\n      },\n      particles: props.particles,\n      detectRetina: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  });\n};","map":{"version":3,"sources":["/Users/alberto/Projects/Personal/Website3D/src/components/Particles2.js"],"names":["React","Particles","loadFull","Particles2","props","particlesInit","main","console","log","particlesLoaded","container","background","color","value","fpsLimit","interactivity","events","onClick","enable","mode","onHover","resize","modes","push","quantity","repulse","distance","duration","particles","detectRetina"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAGA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AACjC,QAAMC,aAAa,GAAG,MAAOC,IAAP,IAAgB;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADkC,CAGlC;AACA;AACA;;AACA,UAAMJ,QAAQ,CAACI,IAAD,CAAd;AACD,GAPH;;AASE,QAAMG,eAAe,GAAIC,SAAD,IAAe;AACrCH,IAAAA,OAAO,CAACC,GAAR,CAAYE,SAAZ;AACD,GAFD;;AAIA,sBACE,oBAAC,SAAD;AACI,IAAA,EAAE,EAAC,aADP;AAEI,IAAA,IAAI,EAAEL,aAFV;AAGI,IAAA,MAAM,EAAEI,eAHZ;AAII,IAAA,OAAO,EAAE;AACLE,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE;AADF;AADG,OADP;AAMLC,MAAAA,QAAQ,EAAE,GANL;AAOLC,MAAAA,aAAa,EAAE;AACbC,QAAAA,MAAM,EAAE;AACNC,UAAAA,OAAO,EAAE;AACPC,YAAAA,MAAM,EAAE,IADD;AAEPC,YAAAA,IAAI,EAAE;AAFC,WADH;AAKNC,UAAAA,OAAO,EAAE;AACPF,YAAAA,MAAM,EAAE,IADD;AAEPC,YAAAA,IAAI,EAAE;AAFC,WALH;AASNE,UAAAA,MAAM,EAAE;AATF,SADK;AAYbC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE;AACJC,YAAAA,QAAQ,EAAE;AADN,WADD;AAILC,UAAAA,OAAO,EAAE;AACPC,YAAAA,QAAQ,EAAE,GADH;AAEPC,YAAAA,QAAQ,EAAE;AAFH;AAJJ;AAZM,OAPV;AA6BLC,MAAAA,SAAS,EAAExB,KAAK,CAACwB,SA7BZ;AA8BLC,MAAAA,YAAY,EAAE;AA9BT,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAuCL,CArDM","sourcesContent":["import React from 'react';\nimport Particles from 'react-tsparticles';\nimport { loadFull } from \"tsparticles\";\n\n\nexport const Particles2 = (props) => {\n    const particlesInit = async (main) => {\n        console.log(main);\n    \n        // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n        // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n        // starting from v2 you can add only the features you need reducing the bundle size\n        await loadFull(main);\n      };\n    \n      const particlesLoaded = (container) => {\n        console.log(container);\n      };\n    \n      return (\n        <Particles \n            id=\"tsparticles\"\n            init={particlesInit}\n            loaded={particlesLoaded}\n            options={{\n                background: {\n                  color: {\n                    value: \"#0d47a1\",\n                  },\n                },\n                fpsLimit: 120,\n                interactivity: {\n                  events: {\n                    onClick: {\n                      enable: true,\n                      mode: \"push\",\n                    },\n                    onHover: {\n                      enable: true,\n                      mode: \"repulse\",\n                    },\n                    resize: true,\n                  },\n                  modes: {\n                    push: {\n                      quantity: 4,\n                    },\n                    repulse: {\n                      distance: 200,\n                      duration: 0.4,\n                    },\n                  },\n                },\n                particles: props.particles,\n                detectRetina: true,\n              }}\n        />\n      );\n}  "]},"metadata":{},"sourceType":"module"}