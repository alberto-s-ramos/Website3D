{"ast":null,"code":"/*\n * Useful things from Adobe's Snap.svg adopted to the library needs\n */\n\n/*\n * Paths\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parsePathString = parsePathString;\nexports.catmullRom2bezier = catmullRom2bezier;\nexports.ellipsePath = ellipsePath;\nexports.pathToAbsolute = pathToAbsolute;\nexports.l2c = l2c;\nexports.q2c = q2c;\nexports.a2c = a2c;\nexports.path2curve = path2curve;\nexports.box = box;\nexports.curveDim = curveDim;\nexports.curvePathBBox = curvePathBBox;\nexports.path2string = path2string;\nexports.rgbToString = rgbToString;\nexports.toHex = toHex;\nexports.packageRGB = packageRGB;\nexports.hsb2rgb = hsb2rgb;\nexports.hsl2rgb = hsl2rgb;\nexports.getRGB = getRGB;\nvar spaces = \"\\t\\n\\u000b\\f\\r   ᠎             　\\u2028\\u2029\";\nvar pathCommand = new RegExp(\"([a-z])[\" + spaces + \",]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\" + spaces + \"]*,?[\" + spaces + \"]*)+)\", \"ig\");\nvar pathValues = new RegExp(\"(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[\" + spaces + \"]*,?[\" + spaces + \"]*\", \"ig\"); // Parses given path string into an array of arrays of path segments\n\nfunction parsePathString(pathString) {\n  if (!pathString) {\n    return null;\n  }\n\n  if (typeof pathString === typeof []) {\n    return pathString;\n  }\n\n  var paramCounts = {\n    a: 7,\n    c: 6,\n    o: 2,\n    h: 1,\n    l: 2,\n    m: 2,\n    r: 4,\n    q: 4,\n    s: 4,\n    t: 2,\n    v: 1,\n    u: 3,\n    z: 0\n  };\n  var data = [];\n  String(pathString).replace(pathCommand, function replacePath(a, b, c) {\n    var params = [];\n    var name = b.toLowerCase();\n    var l = b;\n    c.replace(pathValues, function replaceC(a, b) {\n      if (b) {\n        params.push(+b);\n      }\n    });\n\n    if (name === \"m\" && params.length > 2) {\n      data.push([b].concat(params.splice(0, 2)));\n      name = \"l\";\n      l = b === \"m\" ? \"l\" : \"L\";\n    }\n\n    if (name === \"o\" && params.length === 1) {\n      data.push([l, params[0]]);\n    }\n\n    if (name === \"r\") {\n      data.push([l].concat(params));\n    } else {\n      while (params.length >= paramCounts[name]) {\n        data.push([l].concat(params.splice(0, paramCounts[name])));\n\n        if (!paramCounts[name]) {\n          break;\n        }\n      }\n    }\n  });\n  return data;\n} // http://schepers.cc/getting-to-the-point\n\n\nfunction catmullRom2bezier(crp, z) {\n  var d = [];\n  var i = 0,\n      iLen = crp.length;\n\n  for (; iLen - 2 * !z > i; i += 2) {\n    var p = [{\n      x: +crp[i - 2],\n      y: +crp[i - 1]\n    }, {\n      x: +crp[i],\n      y: +crp[i + 1]\n    }, {\n      x: +crp[i + 2],\n      y: +crp[i + 3]\n    }, {\n      x: +crp[i + 4],\n      y: +crp[i + 5]\n    }];\n\n    if (z) {\n      if (!i) {\n        p[0] = {\n          x: +crp[iLen - 2],\n          y: +crp[iLen - 1]\n        };\n      } else if (iLen - 4 === i) {\n        p[3] = {\n          x: +crp[0],\n          y: +crp[1]\n        };\n      } else if (iLen - 2 === i) {\n        p[2] = {\n          x: +crp[0],\n          y: +crp[1]\n        };\n        p[3] = {\n          x: +crp[2],\n          y: +crp[3]\n        };\n      }\n    } else {\n      if (iLen - 4 === i) {\n        p[3] = p[2];\n      } else if (!i) {\n        p[0] = {\n          x: +crp[i],\n          y: +crp[i + 1]\n        };\n      }\n    }\n\n    d.push([\"C\", (-p[0].x + 6 * p[1].x + p[2].x) / 6, (-p[0].y + 6 * p[1].y + p[2].y) / 6, (p[1].x + 6 * p[2].x - p[3].x) / 6, (p[1].y + 6 * p[2].y - p[3].y) / 6, p[2].x, p[2].y]);\n  }\n\n  return d;\n}\n\nfunction ellipsePath(_x, _y, _rx, _ry, a) {\n  var rx = _rx;\n  var ry = _ry;\n  var x = _x;\n  var y = _y;\n  var res;\n\n  if (a === null && ry === null) {\n    ry = rx;\n  }\n\n  x = +x;\n  y = +y;\n  rx = +rx;\n  ry = +ry;\n\n  if (a !== null) {\n    var rad = Math.PI / 180;\n    var x1 = x + rx * Math.cos(-ry * rad);\n    var x2 = x + rx * Math.cos(-a * rad);\n    var y1 = y + rx * Math.sin(-ry * rad);\n    var y2 = y + rx * Math.sin(-a * rad);\n    return [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n  }\n\n  return [[\"M\", x, y], [\"m\", 0, -ry], [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry], [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry], [\"z\"]];\n}\n\n;\n\nfunction pathToAbsolute(pathArray) {\n  pathArray = parsePathString(pathArray);\n\n  if (!pathArray || !pathArray.length) {\n    return [[\"M\", 0, 0]];\n  }\n\n  var res = [],\n      x = 0,\n      y = 0,\n      mx = 0,\n      my = 0,\n      start = 0,\n      pa0;\n\n  if (pathArray[0][0] == \"M\") {\n    x = +pathArray[0][1];\n    y = +pathArray[0][2];\n    mx = x;\n    my = y;\n    start++;\n    res[0] = [\"M\", x, y];\n  }\n\n  var crz = pathArray.length == 3 && pathArray[0][0] == \"M\" && pathArray[1][0].toUpperCase() == \"R\" && pathArray[2][0].toUpperCase() == \"Z\";\n\n  for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n    res.push(r = []);\n    pa = pathArray[i];\n    pa0 = pa[0];\n\n    if (pa0 != pa0.toUpperCase()) {\n      r[0] = pa0.toUpperCase();\n\n      switch (r[0]) {\n        case \"A\":\n          r[1] = pa[1];\n          r[2] = pa[2];\n          r[3] = pa[3];\n          r[4] = pa[4];\n          r[5] = pa[5];\n          r[6] = +pa[6] + x;\n          r[7] = +pa[7] + y;\n          break;\n\n        case \"V\":\n          r[1] = +pa[1] + y;\n          break;\n\n        case \"H\":\n          r[1] = +pa[1] + x;\n          break;\n\n        case \"R\":\n          var dots = [x, y].concat(pa.slice(1));\n\n          for (var j = 2, jj = dots.length; j < jj; j++) {\n            dots[j] = +dots[j] + x;\n            dots[++j] = +dots[j] + y;\n          }\n\n          res.pop();\n          res = res.concat(catmullRom2bezier(dots, crz));\n          break;\n\n        case \"O\":\n          res.pop();\n          dots = ellipsePath(x, y, pa[1], pa[2]);\n          dots.push(dots[0]);\n          res = res.concat(dots);\n          break;\n\n        case \"U\":\n          res.pop();\n          res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n          r = [\"U\"].concat(res[res.length - 1].slice(-2));\n          break;\n\n        case \"M\":\n          mx = +pa[1] + x;\n          my = +pa[2] + y;\n\n        default:\n          for (j = 1, jj = pa.length; j < jj; j++) {\n            r[j] = +pa[j] + (j % 2 ? x : y);\n          }\n\n      }\n    } else if (pa0 == \"R\") {\n      dots = [x, y].concat(pa.slice(1));\n      res.pop();\n      res = res.concat(catmullRom2bezier(dots, crz));\n      r = [\"R\"].concat(pa.slice(-2));\n    } else if (pa0 == \"O\") {\n      res.pop();\n      dots = ellipsePath(x, y, pa[1], pa[2]);\n      dots.push(dots[0]);\n      res = res.concat(dots);\n    } else if (pa0 == \"U\") {\n      res.pop();\n      res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n      r = [\"U\"].concat(res[res.length - 1].slice(-2));\n    } else {\n      for (var k = 0, kk = pa.length; k < kk; k++) {\n        r[k] = pa[k];\n      }\n    }\n\n    pa0 = pa0.toUpperCase();\n\n    if (pa0 != \"O\") {\n      switch (r[0]) {\n        case \"Z\":\n          x = +mx;\n          y = +my;\n          break;\n\n        case \"H\":\n          x = r[1];\n          break;\n\n        case \"V\":\n          y = r[1];\n          break;\n\n        case \"M\":\n          mx = r[r.length - 2];\n          my = r[r.length - 1];\n\n        default:\n          x = r[r.length - 2];\n          y = r[r.length - 1];\n      }\n    }\n  }\n\n  return res;\n}\n\n;\n\nfunction l2c(x1, y1, x2, y2) {\n  return [x1, y1, x2, y2, x2, y2];\n}\n\n;\n\nfunction q2c(x1, y1, ax, ay, x2, y2) {\n  var _13 = 1 / 3,\n      _23 = 2 / 3;\n\n  return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];\n}\n\n;\n\nfunction a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n  // for more information of where this math came from visit:\n  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n  var _120 = Math.PI * 120 / 180,\n      rad = Math.PI / 180 * (+angle || 0),\n      res = [],\n      xy,\n      rotate = function rotate(x, y, rad) {\n    var X = x * Math.cos(rad) - y * Math.sin(rad),\n        Y = x * Math.sin(rad) + y * Math.cos(rad);\n    return {\n      x: X,\n      y: Y\n    };\n  };\n\n  if (!recursive) {\n    xy = rotate(x1, y1, -rad);\n    x1 = xy.x;\n    y1 = xy.y;\n    xy = rotate(x2, y2, -rad);\n    x2 = xy.x;\n    y2 = xy.y;\n    var cos = Math.cos(Math.PI / 180 * angle),\n        sin = Math.sin(Math.PI / 180 * angle),\n        x = (x1 - x2) / 2,\n        y = (y1 - y2) / 2;\n    var h = x * x / (rx * rx) + y * y / (ry * ry);\n\n    if (h > 1) {\n      h = Math.sqrt(h);\n      rx = h * rx;\n      ry = h * ry;\n    }\n\n    var rx2 = rx * rx,\n        ry2 = ry * ry,\n        k = (large_arc_flag == sweep_flag ? -1 : 1) * Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n        cx = k * rx * y / ry + (x1 + x2) / 2,\n        cy = k * -ry * x / rx + (y1 + y2) / 2,\n        f1 = Math.asin(((y1 - cy) / ry).toFixed(9)),\n        f2 = Math.asin(((y2 - cy) / ry).toFixed(9));\n    f1 = x1 < cx ? Math.PI - f1 : f1;\n    f2 = x2 < cx ? Math.PI - f2 : f2;\n    f1 < 0 && (f1 = Math.PI * 2 + f1);\n    f2 < 0 && (f2 = Math.PI * 2 + f2);\n\n    if (sweep_flag && f1 > f2) {\n      f1 = f1 - Math.PI * 2;\n    }\n\n    if (!sweep_flag && f2 > f1) {\n      f2 = f2 - Math.PI * 2;\n    }\n  } else {\n    f1 = recursive[0];\n    f2 = recursive[1];\n    cx = recursive[2];\n    cy = recursive[3];\n  }\n\n  var df = f2 - f1;\n\n  if (Math.abs(df) > _120) {\n    var f2old = f2,\n        x2old = x2,\n        y2old = y2;\n    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n    x2 = cx + rx * Math.cos(f2);\n    y2 = cy + ry * Math.sin(f2);\n    res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n  }\n\n  df = f2 - f1;\n  var c1 = Math.cos(f1),\n      s1 = Math.sin(f1),\n      c2 = Math.cos(f2),\n      s2 = Math.sin(f2),\n      t = Math.tan(df / 4),\n      hx = 4 / 3 * rx * t,\n      hy = 4 / 3 * ry * t,\n      m1 = [x1, y1],\n      m2 = [x1 + hx * s1, y1 - hy * c1],\n      m3 = [x2 + hx * s2, y2 - hy * c2],\n      m4 = [x2, y2];\n  m2[0] = 2 * m1[0] - m2[0];\n  m2[1] = 2 * m1[1] - m2[1];\n\n  if (recursive) {\n    return [m2, m3, m4].concat(res);\n  } else {\n    res = [m2, m3, m4].concat(res).join().split(\",\");\n    var newres = [];\n\n    for (var i = 0, ii = res.length; i < ii; i++) {\n      newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n    }\n\n    return newres;\n  }\n}\n\n;\n\nfunction path2curve(path, path2) {\n  var p = pathToAbsolute(path),\n      p2 = path2 && pathToAbsolute(path2),\n      attrs = {\n    x: 0,\n    y: 0,\n    bx: 0,\n    by: 0,\n    X: 0,\n    Y: 0,\n    qx: null,\n    qy: null\n  },\n      attrs2 = {\n    x: 0,\n    y: 0,\n    bx: 0,\n    by: 0,\n    X: 0,\n    Y: 0,\n    qx: null,\n    qy: null\n  },\n      processPath = function processPath(path, d, pcom) {\n    var nx, ny;\n\n    if (!path) {\n      return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n    }\n\n    !(path[0] in {\n      T: 1,\n      Q: 1\n    }) && (d.qx = d.qy = null);\n\n    switch (path[0]) {\n      case \"M\":\n        d.X = path[1];\n        d.Y = path[2];\n        break;\n\n      case \"A\":\n        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n        break;\n\n      case \"S\":\n        if (pcom == \"C\" || pcom == \"S\") {\n          // In \"S\" case we have to take into account, if the previous command is C/S.\n          nx = d.x * 2 - d.bx; // And reflect the previous\n\n          ny = d.y * 2 - d.by; // command's control point relative to the current point.\n        } else {\n          // or some else or nothing\n          nx = d.x;\n          ny = d.y;\n        }\n\n        path = [\"C\", nx, ny].concat(path.slice(1));\n        break;\n\n      case \"T\":\n        if (pcom == \"Q\" || pcom == \"T\") {\n          // In \"T\" case we have to take into account, if the previous command is Q/T.\n          d.qx = d.x * 2 - d.qx; // And make a reflection similar\n\n          d.qy = d.y * 2 - d.qy; // to case \"S\".\n        } else {\n          // or something else or nothing\n          d.qx = d.x;\n          d.qy = d.y;\n        }\n\n        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n        break;\n\n      case \"Q\":\n        d.qx = path[1];\n        d.qy = path[2];\n        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n        break;\n\n      case \"L\":\n        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n        break;\n\n      case \"H\":\n        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n        break;\n\n      case \"V\":\n        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n        break;\n\n      case \"Z\":\n        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n        break;\n    }\n\n    return path;\n  },\n      fixArc = function fixArc(pp, i) {\n    if (pp[i].length > 7) {\n      pp[i].shift();\n      var pi = pp[i];\n\n      while (pi.length) {\n        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n\n        p2 && (pcoms2[i] = \"A\"); // the same as above\n\n        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n      }\n\n      pp.splice(i, 1);\n      ii = Math.max(p.length, p2 && p2.length || 0);\n    }\n  },\n      fixM = function fixM(path1, path2, a1, a2, i) {\n    if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n      path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n      a1.bx = 0;\n      a1.by = 0;\n      a1.x = path1[i][1];\n      a1.y = path1[i][2];\n      ii = Math.max(p.length, p2 && p2.length || 0);\n    }\n  },\n      pcoms1 = [],\n      // path commands of original path p\n  pcoms2 = [],\n      // path commands of original path p2\n  pfirst = \"\",\n      // temporary holder for original path command\n  pcom = \"\"; // holder for previous path command of original path\n\n\n  for (var i = 0, ii = Math.max(p.length, p2 && p2.length || 0); i < ii; i++) {\n    p[i] && (pfirst = p[i][0]); // save current path command\n\n    if (pfirst != \"C\") {\n      // C is not saved yet, because it may be result of conversion\n      pcoms1[i] = pfirst; // Save current path command\n\n      i && (pcom = pcoms1[i - 1]); // Get previous path command pcom\n    }\n\n    p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n    if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n    // which may produce multiple C:s\n    // so we have to make sure that C is also C in original path\n\n    fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n    if (p2) {\n      // the same procedures is done to p2\n      p2[i] && (pfirst = p2[i][0]);\n\n      if (pfirst != \"C\") {\n        pcoms2[i] = pfirst;\n        i && (pcom = pcoms2[i - 1]);\n      }\n\n      p2[i] = processPath(p2[i], attrs2, pcom);\n\n      if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n        pcoms2[i] = \"C\";\n      }\n\n      fixArc(p2, i);\n    }\n\n    fixM(p, p2, attrs, attrs2, i);\n    fixM(p2, p, attrs2, attrs, i);\n    var seg = p[i],\n        seg2 = p2 && p2[i],\n        seglen = seg.length,\n        seg2len = p2 && seg2.length;\n    attrs.x = seg[seglen - 2];\n    attrs.y = seg[seglen - 1];\n    attrs.bx = parseFloat(seg[seglen - 4]) || attrs.x;\n    attrs.by = parseFloat(seg[seglen - 3]) || attrs.y;\n    attrs2.bx = p2 && (parseFloat(seg2[seg2len - 4]) || attrs2.x);\n    attrs2.by = p2 && (parseFloat(seg2[seg2len - 3]) || attrs2.y);\n    attrs2.x = p2 && seg2[seg2len - 2];\n    attrs2.y = p2 && seg2[seg2len - 1];\n  }\n\n  return p2 ? [p, p2] : p;\n}\n\n;\n\nfunction box(x, y, width, height) {\n  if (x == null) {\n    x = y = width = height = 0;\n  }\n\n  if (y == null) {\n    y = x.y;\n    width = x.width;\n    height = x.height;\n    x = x.x;\n  }\n\n  return {\n    x: x,\n    y: y,\n    w: width,\n    h: height,\n    cx: x + width / 2,\n    cy: y + height / 2\n  };\n}\n\n; // Returns bounding box of cubic bezier curve.\n// Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n// Original version: NISHIO Hirokazu\n// Modifications: https://github.com/timo22345\n\nfunction curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var tvalues = [],\n      bounds = [[], []],\n      a,\n      b,\n      c,\n      t,\n      t1,\n      t2,\n      b2ac,\n      sqrtb2ac;\n\n  for (var i = 0; i < 2; ++i) {\n    if (i == 0) {\n      b = 6 * x0 - 12 * x1 + 6 * x2;\n      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n      c = 3 * x1 - 3 * x0;\n    } else {\n      b = 6 * y0 - 12 * y1 + 6 * y2;\n      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n      c = 3 * y1 - 3 * y0;\n    }\n\n    if (Math.abs(a) < 1e-12) {\n      if (Math.abs(b) < 1e-12) {\n        continue;\n      }\n\n      t = -c / b;\n\n      if (0 < t && t < 1) {\n        tvalues.push(t);\n      }\n\n      continue;\n    }\n\n    b2ac = b * b - 4 * c * a;\n    sqrtb2ac = Math.sqrt(b2ac);\n\n    if (b2ac < 0) {\n      continue;\n    }\n\n    t1 = (-b + sqrtb2ac) / (2 * a);\n\n    if (0 < t1 && t1 < 1) {\n      tvalues.push(t1);\n    }\n\n    t2 = (-b - sqrtb2ac) / (2 * a);\n\n    if (0 < t2 && t2 < 1) {\n      tvalues.push(t2);\n    }\n  }\n\n  var x,\n      y,\n      j = tvalues.length,\n      jlen = j,\n      mt;\n\n  while (j--) {\n    t = tvalues[j];\n    mt = 1 - t;\n    bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n    bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n  }\n\n  bounds[0][jlen] = x0;\n  bounds[1][jlen] = y0;\n  bounds[0][jlen + 1] = x3;\n  bounds[1][jlen + 1] = y3;\n  bounds[0].length = bounds[1].length = jlen + 2;\n  return {\n    min: {\n      x: Math.min.apply(0, bounds[0]),\n      y: Math.min.apply(0, bounds[1])\n    },\n    max: {\n      x: Math.max.apply(0, bounds[0]),\n      y: Math.max.apply(0, bounds[1])\n    }\n  };\n}\n\n;\n\nfunction curvePathBBox(path) {\n  var x = 0,\n      y = 0,\n      X = [],\n      Y = [],\n      p;\n\n  for (var i = 0, ii = path.length; i < ii; i++) {\n    p = path[i];\n\n    if (p[0] == \"M\") {\n      x = p[1];\n      y = p[2];\n      X.push(x);\n      Y.push(y);\n    } else {\n      var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n      X = X.concat(dim.min.x, dim.max.x);\n      Y = Y.concat(dim.min.y, dim.max.y);\n      x = p[5];\n      y = p[6];\n    }\n  }\n\n  var xmin = Math.min.apply(0, X),\n      ymin = Math.min.apply(0, Y),\n      xmax = Math.max.apply(0, X),\n      ymax = Math.max.apply(0, Y),\n      bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n  return bb;\n}\n\n;\nvar p2s = /,?([a-z]),?/gi;\n\nfunction path2string(path) {\n  return path.join(',').replace(p2s, \"$1\");\n}\n\n;\n/*\n * Styles\n */\n\nvar hsrg = {\n  hs: 1,\n  rg: 1\n},\n    has = \"hasOwnProperty\",\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    commaSpaces = new RegExp(\"[\" + spaces + \"]*,[\" + spaces + \"]*\"); // Converts RGB values to a hex representation of the color\n// var rgb = function (r, g, b, o) {\n//   if (isFinite(o)) {\n//     var round = math.round;\n//     return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n//   }\n//   return \"#\" + (16777216 | b | (g << 8) | (r << 16)).toString(16).slice(1);\n// };\n\nfunction rgbToString(rgb) {\n  var round = Math.round;\n  return \"rgba(\" + [round(rgb.r), round(rgb.g), round(rgb.b), +rgb.opacity.toFixed(2)] + \")\";\n}\n\n;\n\nfunction toHex(color) {\n  // Remind: to fix SSR problem issue#3\n  if (typeof window === \"undefined\") return;\n  var i = window.document.getElementsByTagName(\"head\")[0] || window.document.getElementsByTagName(\"svg\")[0],\n      red = \"rgb(255, 0, 0)\";\n\n  exports.toHex = toHex = function (color) {\n    if (color.toLowerCase() == \"red\") {\n      return red;\n    }\n\n    i.style.color = red;\n    i.style.color = color;\n    var out = window.document.defaultView.getComputedStyle(i, \"\").getPropertyValue(\"color\");\n    return out == red ? null : out;\n  };\n\n  return toHex(color);\n}\n\n;\n\nfunction packageRGB(r, g, b, o) {\n  r = Math.round(r * 255);\n  g = Math.round(g * 255);\n  b = Math.round(b * 255);\n  var rgb = {\n    r: r,\n    g: g,\n    b: b,\n    opacity: isFinite(o) ? o : 1\n  };\n  return rgb;\n}\n\n; // Converts HSB values to an RGB object\n\nfunction hsb2rgb(h, s, v, o) {\n  if (typeof h === typeof {} && \"h\" in h && \"s\" in h && \"b\" in h) {\n    v = h.b;\n    s = h.s;\n    h = h.h;\n    o = h.o;\n  }\n\n  h *= 360;\n  var R, G, B, X, C;\n  h = h % 360 / 60;\n  C = v * s;\n  X = C * (1 - Math.abs(h % 2 - 1));\n  R = G = B = v - C;\n  h = ~~h;\n  R += [C, X, 0, 0, X, C][h];\n  G += [X, C, C, X, 0, 0][h];\n  B += [0, 0, X, C, C, X][h];\n  return packageRGB(R, G, B, o);\n}\n\n; // Converts HSL values to an RGB object\n\nfunction hsl2rgb(h, s, l, o) {\n  if (typeof h === typeof {} && \"h\" in h && \"s\" in h && \"l\" in h) {\n    l = h.l;\n    s = h.s;\n    h = h.h;\n  }\n\n  if (h > 1 || s > 1 || l > 1) {\n    h /= 360;\n    s /= 100;\n    l /= 100;\n  }\n\n  h *= 360;\n  var R, G, B, X, C;\n  h = h % 360 / 60;\n  C = 2 * s * (l < .5 ? l : 1 - l);\n  X = C * (1 - Math.abs(h % 2 - 1));\n  R = G = B = l - C / 2;\n  h = ~~h;\n  R += [C, X, 0, 0, X, C][h];\n  G += [X, C, C, X, 0, 0][h];\n  B += [0, 0, X, C, C, X][h];\n  return packageRGB(R, G, B, o);\n}\n\n; // Parses color string as RGB object\n\nfunction getRGB(colour) {\n  if (!colour || !!((colour = String(colour)).indexOf(\"-\") + 1)) {\n    return {\n      r: -1,\n      g: -1,\n      b: -1,\n      opacity: -1,\n      error: 1\n    };\n  }\n\n  if (colour == \"none\") {\n    return {\n      r: -1,\n      g: -1,\n      b: -1,\n      opacity: -1\n    };\n  }\n\n  !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n\n  if (!colour) {\n    return {\n      r: -1,\n      g: -1,\n      b: -1,\n      opacity: -1,\n      error: 1\n    };\n  }\n\n  var res,\n      red,\n      green,\n      blue,\n      opacity,\n      t,\n      values,\n      rgb = colour.match(colourRegExp);\n\n  if (rgb) {\n    if (rgb[2]) {\n      blue = parseInt(rgb[2].substring(5), 16);\n      green = parseInt(rgb[2].substring(3, 5), 16);\n      red = parseInt(rgb[2].substring(1, 3), 16);\n    }\n\n    if (rgb[3]) {\n      blue = parseInt((t = rgb[3].charAt(3)) + t, 16);\n      green = parseInt((t = rgb[3].charAt(2)) + t, 16);\n      red = parseInt((t = rgb[3].charAt(1)) + t, 16);\n    }\n\n    if (rgb[4]) {\n      values = rgb[4].split(commaSpaces);\n      red = parseFloat(values[0]);\n      values[0].slice(-1) == \"%\" && (red *= 2.55);\n      green = parseFloat(values[1]);\n      values[1].slice(-1) == \"%\" && (green *= 2.55);\n      blue = parseFloat(values[2]);\n      values[2].slice(-1) == \"%\" && (blue *= 2.55);\n      rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = parseFloat(values[3]));\n      values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n    }\n\n    if (rgb[5]) {\n      values = rgb[5].split(commaSpaces);\n      red = parseFloat(values[0]);\n      values[0].slice(-1) == \"%\" && (red /= 100);\n      green = parseFloat(values[1]);\n      values[1].slice(-1) == \"%\" && (green /= 100);\n      blue = parseFloat(values[2]);\n      values[2].slice(-1) == \"%\" && (blue /= 100);\n      (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n      rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = parseFloat(values[3]));\n      values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n      return hsb2rgb(red, green, blue, opacity);\n    }\n\n    if (rgb[6]) {\n      values = rgb[6].split(commaSpaces);\n      red = parseFloat(values[0]);\n      values[0].slice(-1) == \"%\" && (red /= 100);\n      green = parseFloat(values[1]);\n      values[1].slice(-1) == \"%\" && (green /= 100);\n      blue = parseFloat(values[2]);\n      values[2].slice(-1) == \"%\" && (blue /= 100);\n      (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n      rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = parseFloat(values[3]));\n      values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n      return hsl2rgb(red, green, blue, opacity);\n    }\n\n    red = Math.min(Math.round(red), 255);\n    green = Math.min(Math.round(green), 255);\n    blue = Math.min(Math.round(blue), 255);\n    opacity = Math.min(Math.max(opacity, 0), 1);\n    rgb = {\n      r: red,\n      g: green,\n      b: blue\n    };\n    rgb.opacity = isFinite(opacity) ? opacity : 1;\n    return rgb;\n  }\n\n  return {\n    r: -1,\n    g: -1,\n    b: -1,\n    opacity: -1,\n    error: 1\n  };\n}\n\n;","map":{"version":3,"sources":["/Users/alberto.ramos/Documents/Personal/GitHub/Website3D/node_modules/react-svg-morph/lib/utils/svglite.js"],"names":["Object","defineProperty","exports","value","parsePathString","catmullRom2bezier","ellipsePath","pathToAbsolute","l2c","q2c","a2c","path2curve","box","curveDim","curvePathBBox","path2string","rgbToString","toHex","packageRGB","hsb2rgb","hsl2rgb","getRGB","spaces","pathCommand","RegExp","pathValues","pathString","paramCounts","a","c","o","h","l","m","r","q","s","t","v","u","z","data","String","replace","replacePath","b","params","name","toLowerCase","replaceC","push","length","concat","splice","crp","d","i","iLen","p","x","y","_x","_y","_rx","_ry","rx","ry","res","rad","Math","PI","x1","cos","x2","y1","sin","y2","pathArray","mx","my","start","pa0","crz","toUpperCase","pa","ii","dots","slice","j","jj","pop","k","kk","ax","ay","_13","_23","angle","large_arc_flag","sweep_flag","recursive","_120","xy","rotate","X","Y","sqrt","rx2","ry2","abs","cx","cy","f1","asin","toFixed","f2","df","f2old","x2old","y2old","c1","s1","c2","s2","tan","hx","hy","m1","m2","m3","m4","join","split","newres","path","path2","p2","attrs","bx","by","qx","qy","attrs2","processPath","pcom","nx","ny","T","Q","apply","fixArc","pp","shift","pi","pcoms1","pcoms2","max","fixM","path1","a1","a2","pfirst","seg","seg2","seglen","seg2len","parseFloat","width","height","w","x0","y0","x3","y3","tvalues","bounds","t1","t2","b2ac","sqrtb2ac","jlen","mt","min","dim","xmin","ymin","xmax","ymax","bb","p2s","hsrg","hs","rg","has","colourRegExp","commaSpaces","rgb","round","g","opacity","color","window","document","getElementsByTagName","red","style","out","defaultView","getComputedStyle","getPropertyValue","isFinite","R","G","B","C","colour","indexOf","error","substring","charAt","green","blue","values","match","parseInt"],"mappings":"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","sourcesContent":["/*\n * Useful things from Adobe's Snap.svg adopted to the library needs\n */\n\n/*\n * Paths\n */\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.parsePathString = parsePathString;\nexports.catmullRom2bezier = catmullRom2bezier;\nexports.ellipsePath = ellipsePath;\nexports.pathToAbsolute = pathToAbsolute;\nexports.l2c = l2c;\nexports.q2c = q2c;\nexports.a2c = a2c;\nexports.path2curve = path2curve;\nexports.box = box;\nexports.curveDim = curveDim;\nexports.curvePathBBox = curvePathBBox;\nexports.path2string = path2string;\nexports.rgbToString = rgbToString;\nexports.toHex = toHex;\nexports.packageRGB = packageRGB;\nexports.hsb2rgb = hsb2rgb;\nexports.hsl2rgb = hsl2rgb;\nexports.getRGB = getRGB;\nvar spaces = \"\\t\\n\\u000b\\f\\r   ᠎             　\\u2028\\u2029\";\nvar pathCommand = new RegExp(\"([a-z])[\" + spaces + \",]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\" + spaces + \"]*,?[\" + spaces + \"]*)+)\", \"ig\");\nvar pathValues = new RegExp(\"(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[\" + spaces + \"]*,?[\" + spaces + \"]*\", \"ig\");\n\n// Parses given path string into an array of arrays of path segments\n\nfunction parsePathString(pathString) {\n    if (!pathString) {\n        return null;\n    }\n\n    if (typeof pathString === typeof []) {\n        return pathString;\n    }\n    var paramCounts = { a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0 };\n    var data = [];\n\n    String(pathString).replace(pathCommand, function replacePath(a, b, c) {\n        var params = [];\n        var name = b.toLowerCase();\n        var l = b;\n        c.replace(pathValues, function replaceC(a, b) {\n            if (b) {\n                params.push(+b);\n            }\n        });\n        if (name === \"m\" && params.length > 2) {\n            data.push([b].concat(params.splice(0, 2)));\n            name = \"l\";\n            l = b === \"m\" ? \"l\" : \"L\";\n        }\n        if (name === \"o\" && params.length === 1) {\n            data.push([l, params[0]]);\n        }\n        if (name === \"r\") {\n            data.push([l].concat(params));\n        } else {\n            while (params.length >= paramCounts[name]) {\n                data.push([l].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        }\n    });\n\n    return data;\n}\n\n// http://schepers.cc/getting-to-the-point\n\nfunction catmullRom2bezier(crp, z) {\n    var d = [];\n    var i = 0,\n        iLen = crp.length;\n    for (; iLen - 2 * !z > i; i += 2) {\n        var p = [{ x: +crp[i - 2], y: +crp[i - 1] }, { x: +crp[i], y: +crp[i + 1] }, { x: +crp[i + 2], y: +crp[i + 3] }, { x: +crp[i + 4], y: +crp[i + 5] }];\n        if (z) {\n            if (!i) {\n                p[0] = { x: +crp[iLen - 2], y: +crp[iLen - 1] };\n            } else if (iLen - 4 === i) {\n                p[3] = { x: +crp[0], y: +crp[1] };\n            } else if (iLen - 2 === i) {\n                p[2] = { x: +crp[0], y: +crp[1] };\n                p[3] = { x: +crp[2], y: +crp[3] };\n            }\n        } else {\n            if (iLen - 4 === i) {\n                p[3] = p[2];\n            } else if (!i) {\n                p[0] = { x: +crp[i], y: +crp[i + 1] };\n            }\n        }\n        d.push([\"C\", (-p[0].x + 6 * p[1].x + p[2].x) / 6, (-p[0].y + 6 * p[1].y + p[2].y) / 6, (p[1].x + 6 * p[2].x - p[3].x) / 6, (p[1].y + 6 * p[2].y - p[3].y) / 6, p[2].x, p[2].y]);\n    }\n\n    return d;\n}\n\nfunction ellipsePath(_x, _y, _rx, _ry, a) {\n    var rx = _rx;\n    var ry = _ry;\n    var x = _x;\n    var y = _y;\n    var res;\n    if (a === null && ry === null) {\n        ry = rx;\n    }\n    x = +x;\n    y = +y;\n    rx = +rx;\n    ry = +ry;\n    if (a !== null) {\n        var rad = Math.PI / 180;\n        var x1 = x + rx * Math.cos(-ry * rad);\n        var x2 = x + rx * Math.cos(-a * rad);\n        var y1 = y + rx * Math.sin(-ry * rad);\n        var y2 = y + rx * Math.sin(-a * rad);\n        return [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n    }\n    return [[\"M\", x, y], [\"m\", 0, -ry], [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry], [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry], [\"z\"]];\n}\n\n;\n\nfunction pathToAbsolute(pathArray) {\n    pathArray = parsePathString(pathArray);\n\n    if (!pathArray || !pathArray.length) {\n        return [[\"M\", 0, 0]];\n    }\n    var res = [],\n        x = 0,\n        y = 0,\n        mx = 0,\n        my = 0,\n        start = 0,\n        pa0;\n    if (pathArray[0][0] == \"M\") {\n        x = +pathArray[0][1];\n        y = +pathArray[0][2];\n        mx = x;\n        my = y;\n        start++;\n        res[0] = [\"M\", x, y];\n    }\n    var crz = pathArray.length == 3 && pathArray[0][0] == \"M\" && pathArray[1][0].toUpperCase() == \"R\" && pathArray[2][0].toUpperCase() == \"Z\";\n    for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n        res.push(r = []);\n        pa = pathArray[i];\n        pa0 = pa[0];\n        if (pa0 != pa0.toUpperCase()) {\n            r[0] = pa0.toUpperCase();\n            switch (r[0]) {\n                case \"A\":\n                    r[1] = pa[1];\n                    r[2] = pa[2];\n                    r[3] = pa[3];\n                    r[4] = pa[4];\n                    r[5] = pa[5];\n                    r[6] = +pa[6] + x;\n                    r[7] = +pa[7] + y;\n                    break;\n                case \"V\":\n                    r[1] = +pa[1] + y;\n                    break;\n                case \"H\":\n                    r[1] = +pa[1] + x;\n                    break;\n                case \"R\":\n                    var dots = [x, y].concat(pa.slice(1));\n                    for (var j = 2, jj = dots.length; j < jj; j++) {\n                        dots[j] = +dots[j] + x;\n                        dots[++j] = +dots[j] + y;\n                    }\n                    res.pop();\n                    res = res.concat(catmullRom2bezier(dots, crz));\n                    break;\n                case \"O\":\n                    res.pop();\n                    dots = ellipsePath(x, y, pa[1], pa[2]);\n                    dots.push(dots[0]);\n                    res = res.concat(dots);\n                    break;\n                case \"U\":\n                    res.pop();\n                    res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                    r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                    break;\n                case \"M\":\n                    mx = +pa[1] + x;\n                    my = +pa[2] + y;\n                default:\n                    for (j = 1, jj = pa.length; j < jj; j++) {\n                        r[j] = +pa[j] + (j % 2 ? x : y);\n                    }\n            }\n        } else if (pa0 == \"R\") {\n            dots = [x, y].concat(pa.slice(1));\n            res.pop();\n            res = res.concat(catmullRom2bezier(dots, crz));\n            r = [\"R\"].concat(pa.slice(-2));\n        } else if (pa0 == \"O\") {\n            res.pop();\n            dots = ellipsePath(x, y, pa[1], pa[2]);\n            dots.push(dots[0]);\n            res = res.concat(dots);\n        } else if (pa0 == \"U\") {\n            res.pop();\n            res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n            r = [\"U\"].concat(res[res.length - 1].slice(-2));\n        } else {\n            for (var k = 0, kk = pa.length; k < kk; k++) {\n                r[k] = pa[k];\n            }\n        }\n        pa0 = pa0.toUpperCase();\n        if (pa0 != \"O\") {\n            switch (r[0]) {\n                case \"Z\":\n                    x = +mx;\n                    y = +my;\n                    break;\n                case \"H\":\n                    x = r[1];\n                    break;\n                case \"V\":\n                    y = r[1];\n                    break;\n                case \"M\":\n                    mx = r[r.length - 2];\n                    my = r[r.length - 1];\n                default:\n                    x = r[r.length - 2];\n                    y = r[r.length - 1];\n            }\n        }\n    }\n\n    return res;\n}\n\n;\n\nfunction l2c(x1, y1, x2, y2) {\n    return [x1, y1, x2, y2, x2, y2];\n}\n\n;\n\nfunction q2c(x1, y1, ax, ay, x2, y2) {\n    var _13 = 1 / 3,\n        _23 = 2 / 3;\n    return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];\n}\n\n;\n\nfunction a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n    // for more information of where this math came from visit:\n    // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n    var _120 = Math.PI * 120 / 180,\n        rad = Math.PI / 180 * (+angle || 0),\n        res = [],\n        xy,\n        rotate = function rotate(x, y, rad) {\n        var X = x * Math.cos(rad) - y * Math.sin(rad),\n            Y = x * Math.sin(rad) + y * Math.cos(rad);\n        return { x: X, y: Y };\n    };\n    if (!recursive) {\n        xy = rotate(x1, y1, -rad);\n        x1 = xy.x;\n        y1 = xy.y;\n        xy = rotate(x2, y2, -rad);\n        x2 = xy.x;\n        y2 = xy.y;\n        var cos = Math.cos(Math.PI / 180 * angle),\n            sin = Math.sin(Math.PI / 180 * angle),\n            x = (x1 - x2) / 2,\n            y = (y1 - y2) / 2;\n        var h = x * x / (rx * rx) + y * y / (ry * ry);\n        if (h > 1) {\n            h = Math.sqrt(h);\n            rx = h * rx;\n            ry = h * ry;\n        }\n        var rx2 = rx * rx,\n            ry2 = ry * ry,\n            k = (large_arc_flag == sweep_flag ? -1 : 1) * Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n            cx = k * rx * y / ry + (x1 + x2) / 2,\n            cy = k * -ry * x / rx + (y1 + y2) / 2,\n            f1 = Math.asin(((y1 - cy) / ry).toFixed(9)),\n            f2 = Math.asin(((y2 - cy) / ry).toFixed(9));\n\n        f1 = x1 < cx ? Math.PI - f1 : f1;\n        f2 = x2 < cx ? Math.PI - f2 : f2;\n        f1 < 0 && (f1 = Math.PI * 2 + f1);\n        f2 < 0 && (f2 = Math.PI * 2 + f2);\n        if (sweep_flag && f1 > f2) {\n            f1 = f1 - Math.PI * 2;\n        }\n        if (!sweep_flag && f2 > f1) {\n            f2 = f2 - Math.PI * 2;\n        }\n    } else {\n        f1 = recursive[0];\n        f2 = recursive[1];\n        cx = recursive[2];\n        cy = recursive[3];\n    }\n    var df = f2 - f1;\n    if (Math.abs(df) > _120) {\n        var f2old = f2,\n            x2old = x2,\n            y2old = y2;\n        f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n        x2 = cx + rx * Math.cos(f2);\n        y2 = cy + ry * Math.sin(f2);\n        res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n    }\n    df = f2 - f1;\n    var c1 = Math.cos(f1),\n        s1 = Math.sin(f1),\n        c2 = Math.cos(f2),\n        s2 = Math.sin(f2),\n        t = Math.tan(df / 4),\n        hx = 4 / 3 * rx * t,\n        hy = 4 / 3 * ry * t,\n        m1 = [x1, y1],\n        m2 = [x1 + hx * s1, y1 - hy * c1],\n        m3 = [x2 + hx * s2, y2 - hy * c2],\n        m4 = [x2, y2];\n    m2[0] = 2 * m1[0] - m2[0];\n    m2[1] = 2 * m1[1] - m2[1];\n    if (recursive) {\n        return [m2, m3, m4].concat(res);\n    } else {\n        res = [m2, m3, m4].concat(res).join().split(\",\");\n        var newres = [];\n        for (var i = 0, ii = res.length; i < ii; i++) {\n            newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n        }\n        return newres;\n    }\n}\n\n;\n\nfunction path2curve(path, path2) {\n    var p = pathToAbsolute(path),\n        p2 = path2 && pathToAbsolute(path2),\n        attrs = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null },\n        attrs2 = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null },\n        processPath = function processPath(path, d, pcom) {\n        var nx, ny;\n        if (!path) {\n            return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n        }\n        !(path[0] in { T: 1, Q: 1 }) && (d.qx = d.qy = null);\n        switch (path[0]) {\n            case \"M\":\n                d.X = path[1];\n                d.Y = path[2];\n                break;\n            case \"A\":\n                path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                break;\n            case \"S\":\n                if (pcom == \"C\" || pcom == \"S\") {\n                    // In \"S\" case we have to take into account, if the previous command is C/S.\n                    nx = d.x * 2 - d.bx; // And reflect the previous\n                    ny = d.y * 2 - d.by; // command's control point relative to the current point.\n                } else {\n                        // or some else or nothing\n                        nx = d.x;\n                        ny = d.y;\n                    }\n                path = [\"C\", nx, ny].concat(path.slice(1));\n                break;\n            case \"T\":\n                if (pcom == \"Q\" || pcom == \"T\") {\n                    // In \"T\" case we have to take into account, if the previous command is Q/T.\n                    d.qx = d.x * 2 - d.qx; // And make a reflection similar\n                    d.qy = d.y * 2 - d.qy; // to case \"S\".\n                } else {\n                        // or something else or nothing\n                        d.qx = d.x;\n                        d.qy = d.y;\n                    }\n                path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                break;\n            case \"Q\":\n                d.qx = path[1];\n                d.qy = path[2];\n                path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                break;\n            case \"L\":\n                path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                break;\n            case \"H\":\n                path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                break;\n            case \"V\":\n                path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                break;\n            case \"Z\":\n                path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                break;\n        }\n        return path;\n    },\n        fixArc = function fixArc(pp, i) {\n        if (pp[i].length > 7) {\n            pp[i].shift();\n            var pi = pp[i];\n            while (pi.length) {\n                pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                p2 && (pcoms2[i] = \"A\"); // the same as above\n                pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n            }\n            pp.splice(i, 1);\n            ii = Math.max(p.length, p2 && p2.length || 0);\n        }\n    },\n        fixM = function fixM(path1, path2, a1, a2, i) {\n        if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n            path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n            a1.bx = 0;\n            a1.by = 0;\n            a1.x = path1[i][1];\n            a1.y = path1[i][2];\n            ii = Math.max(p.length, p2 && p2.length || 0);\n        }\n    },\n        pcoms1 = [],\n        // path commands of original path p\n    pcoms2 = [],\n        // path commands of original path p2\n    pfirst = \"\",\n        // temporary holder for original path command\n    pcom = \"\"; // holder for previous path command of original path\n    for (var i = 0, ii = Math.max(p.length, p2 && p2.length || 0); i < ii; i++) {\n        p[i] && (pfirst = p[i][0]); // save current path command\n\n        if (pfirst != \"C\") {\n            // C is not saved yet, because it may be result of conversion\n            pcoms1[i] = pfirst; // Save current path command\n            i && (pcom = pcoms1[i - 1]); // Get previous path command pcom\n        }\n        p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n        if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n        // which may produce multiple C:s\n        // so we have to make sure that C is also C in original path\n\n        fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n        if (p2) {\n            // the same procedures is done to p2\n            p2[i] && (pfirst = p2[i][0]);\n            if (pfirst != \"C\") {\n                pcoms2[i] = pfirst;\n                i && (pcom = pcoms2[i - 1]);\n            }\n            p2[i] = processPath(p2[i], attrs2, pcom);\n\n            if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                pcoms2[i] = \"C\";\n            }\n\n            fixArc(p2, i);\n        }\n        fixM(p, p2, attrs, attrs2, i);\n        fixM(p2, p, attrs2, attrs, i);\n        var seg = p[i],\n            seg2 = p2 && p2[i],\n            seglen = seg.length,\n            seg2len = p2 && seg2.length;\n        attrs.x = seg[seglen - 2];\n        attrs.y = seg[seglen - 1];\n        attrs.bx = parseFloat(seg[seglen - 4]) || attrs.x;\n        attrs.by = parseFloat(seg[seglen - 3]) || attrs.y;\n        attrs2.bx = p2 && (parseFloat(seg2[seg2len - 4]) || attrs2.x);\n        attrs2.by = p2 && (parseFloat(seg2[seg2len - 3]) || attrs2.y);\n        attrs2.x = p2 && seg2[seg2len - 2];\n        attrs2.y = p2 && seg2[seg2len - 1];\n    }\n\n    return p2 ? [p, p2] : p;\n}\n\n;\n\nfunction box(x, y, width, height) {\n    if (x == null) {\n        x = y = width = height = 0;\n    }\n    if (y == null) {\n        y = x.y;\n        width = x.width;\n        height = x.height;\n        x = x.x;\n    }\n    return {\n        x: x,\n        y: y,\n        w: width,\n        h: height,\n        cx: x + width / 2,\n        cy: y + height / 2\n    };\n}\n\n;\n\n// Returns bounding box of cubic bezier curve.\n// Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n// Original version: NISHIO Hirokazu\n// Modifications: https://github.com/timo22345\n\nfunction curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var tvalues = [],\n        bounds = [[], []],\n        a,\n        b,\n        c,\n        t,\n        t1,\n        t2,\n        b2ac,\n        sqrtb2ac;\n    for (var i = 0; i < 2; ++i) {\n        if (i == 0) {\n            b = 6 * x0 - 12 * x1 + 6 * x2;\n            a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n            c = 3 * x1 - 3 * x0;\n        } else {\n            b = 6 * y0 - 12 * y1 + 6 * y2;\n            a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n            c = 3 * y1 - 3 * y0;\n        }\n        if (Math.abs(a) < 1e-12) {\n            if (Math.abs(b) < 1e-12) {\n                continue;\n            }\n            t = -c / b;\n            if (0 < t && t < 1) {\n                tvalues.push(t);\n            }\n            continue;\n        }\n        b2ac = b * b - 4 * c * a;\n        sqrtb2ac = Math.sqrt(b2ac);\n        if (b2ac < 0) {\n            continue;\n        }\n        t1 = (-b + sqrtb2ac) / (2 * a);\n        if (0 < t1 && t1 < 1) {\n            tvalues.push(t1);\n        }\n        t2 = (-b - sqrtb2ac) / (2 * a);\n        if (0 < t2 && t2 < 1) {\n            tvalues.push(t2);\n        }\n    }\n\n    var x,\n        y,\n        j = tvalues.length,\n        jlen = j,\n        mt;\n    while (j--) {\n        t = tvalues[j];\n        mt = 1 - t;\n        bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n        bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    bounds[0].length = bounds[1].length = jlen + 2;\n\n    return {\n        min: { x: Math.min.apply(0, bounds[0]), y: Math.min.apply(0, bounds[1]) },\n        max: { x: Math.max.apply(0, bounds[0]), y: Math.max.apply(0, bounds[1]) }\n    };\n}\n\n;\n\nfunction curvePathBBox(path) {\n    var x = 0,\n        y = 0,\n        X = [],\n        Y = [],\n        p;\n    for (var i = 0, ii = path.length; i < ii; i++) {\n        p = path[i];\n        if (p[0] == \"M\") {\n            x = p[1];\n            y = p[2];\n            X.push(x);\n            Y.push(y);\n        } else {\n            var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n            X = X.concat(dim.min.x, dim.max.x);\n            Y = Y.concat(dim.min.y, dim.max.y);\n            x = p[5];\n            y = p[6];\n        }\n    }\n    var xmin = Math.min.apply(0, X),\n        ymin = Math.min.apply(0, Y),\n        xmax = Math.max.apply(0, X),\n        ymax = Math.max.apply(0, Y),\n        bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n\n    return bb;\n}\n\n;\n\nvar p2s = /,?([a-z]),?/gi;\n\nfunction path2string(path) {\n    return path.join(',').replace(p2s, \"$1\");\n}\n\n;\n\n/*\n * Styles\n */\n\nvar hsrg = { hs: 1, rg: 1 },\n    has = \"hasOwnProperty\",\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    commaSpaces = new RegExp(\"[\" + spaces + \"]*,[\" + spaces + \"]*\");\n\n// Converts RGB values to a hex representation of the color\n// var rgb = function (r, g, b, o) {\n//   if (isFinite(o)) {\n//     var round = math.round;\n//     return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n//   }\n//   return \"#\" + (16777216 | b | (g << 8) | (r << 16)).toString(16).slice(1);\n// };\n\nfunction rgbToString(rgb) {\n    var round = Math.round;\n    return \"rgba(\" + [round(rgb.r), round(rgb.g), round(rgb.b), +rgb.opacity.toFixed(2)] + \")\";\n}\n\n;\n\nfunction toHex(color) {\n    // Remind: to fix SSR problem issue#3\n    if (typeof window === \"undefined\") return;\n\n    var i = window.document.getElementsByTagName(\"head\")[0] || window.document.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    exports.toHex = toHex = function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = window.document.defaultView.getComputedStyle(i, \"\").getPropertyValue(\"color\");\n        return out == red ? null : out;\n    };\n    return toHex(color);\n}\n\n;\n\nfunction packageRGB(r, g, b, o) {\n    r = Math.round(r * 255);\n    g = Math.round(g * 255);\n    b = Math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: isFinite(o) ? o : 1\n    };\n    return rgb;\n}\n\n;\n\n// Converts HSB values to an RGB object\n\nfunction hsb2rgb(h, s, v, o) {\n    if (typeof h === typeof {} && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        h = h.h;\n        o = h.o;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - Math.abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~ ~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n}\n\n;\n\n// Converts HSL values to an RGB object\n\nfunction hsl2rgb(h, s, l, o) {\n    if (typeof h === typeof {} && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - Math.abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~ ~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n}\n\n;\n\n// Parses color string as RGB object\n\nfunction getRGB(colour) {\n    if (!colour || !!((colour = String(colour)).indexOf(\"-\") + 1)) {\n        return { r: -1, g: -1, b: -1, opacity: -1, error: 1 };\n    }\n    if (colour == \"none\") {\n        return { r: -1, g: -1, b: -1, opacity: -1 };\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return { r: -1, g: -1, b: -1, opacity: -1, error: 1 };\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = parseInt(rgb[2].substring(5), 16);\n            green = parseInt(rgb[2].substring(3, 5), 16);\n            red = parseInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = parseInt((t = rgb[3].charAt(3)) + t, 16);\n            green = parseInt((t = rgb[3].charAt(2)) + t, 16);\n            red = parseInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = parseFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = parseFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = parseFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = parseFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = parseFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = parseFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = parseFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = parseFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = parseFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = parseFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = parseFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = parseFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return hsl2rgb(red, green, blue, opacity);\n        }\n        red = Math.min(Math.round(red), 255);\n        green = Math.min(Math.round(green), 255);\n        blue = Math.min(Math.round(blue), 255);\n        opacity = Math.min(Math.max(opacity, 0), 1);\n        rgb = { r: red, g: green, b: blue };\n        rgb.opacity = isFinite(opacity) ? opacity : 1;\n        return rgb;\n    }\n    return { r: -1, g: -1, b: -1, opacity: -1, error: 1 };\n}\n\n;"]},"metadata":{},"sourceType":"script"}