{"ast":null,"code":"var _jsxFileName = \"/Users/alberto.ramos/Documents/Personal/GitHub/Website3D/src/components/Skills2.js\";\nimport React, { useRef } from 'react';\nimport \"../style/Skills.scss\";\n\nconst Skills2 = () => {\n  const texts = [\"React\", \"Kotlin\", \"Spring\", \"Java\"];\n  let text1 = texts[textIndex % texts.length];\n  let text2 = texts[(textIndex + 1) % texts.length];\n  const text1Component = /*#__PURE__*/React.createElement(\"span\", {\n    id: \"text1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 28\n    }\n  }, \" \", text1, \" \");\n  const text2Component = /*#__PURE__*/React.createElement(\"span\", {\n    id: \"text2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 28\n    }\n  }, \" \", text2, \" \"); // Controls the speed of morphing.\n\n  const morphTime = 1;\n  const cooldownTime = 0.4;\n  let textIndex = texts.length - 1;\n  let time = new Date();\n  let morph = 0;\n  let cooldown = cooldownTime;\n  text1 = texts[textIndex % texts.length];\n  text2 = texts[(textIndex + 1) % texts.length];\n\n  function doMorph() {\n    morph -= cooldown;\n    cooldown = 0;\n    let fraction = morph / morphTime;\n\n    if (fraction > 1) {\n      cooldown = cooldownTime;\n      fraction = 1;\n    }\n\n    setMorph(fraction);\n  } // A lot of the magic happens here, this is what applies the blur filter to the text.\n\n\n  function setMorph(fraction) {\n    // fraction = Math.cos(fraction * Math.PI) / -2 + .5;\n    text2Component.style.filter = `blur(${Math.min(8 / fraction - 8, 100)}px)`;\n    text2Component.style.opacity = `${Math.pow(fraction, 0.4) * 100}%`;\n    fraction = 1 - fraction;\n    text1Component.style.filter = `blur(${Math.min(8 / fraction - 8, 100)}px)`;\n    text1Component.style.opacity = `${Math.pow(fraction, 0.4) * 100}%`;\n    text1Component.textContent = texts[textIndex % texts.length];\n    text2Component.textContent = texts[(textIndex + 1) % texts.length];\n  }\n\n  function doCooldown() {\n    morph = 0;\n    text2Component.style.filter = \"\";\n    text2Component.style.opacity = \"100%\";\n    text1Component.style.filter = \"\";\n    text1Component.style.opacity = \"0%\";\n  } // Animation loop, which is called every frame.\n\n\n  function animate() {\n    requestAnimationFrame(animate);\n    let newTime = new Date();\n    let shouldIncrementIndex = cooldown > 0;\n    let dt = (newTime - time) / 1000;\n    time = newTime;\n    cooldown -= dt;\n\n    if (cooldown <= 0) {\n      if (shouldIncrementIndex) {\n        textIndex++;\n      }\n\n      doMorph();\n    } else {\n      doCooldown();\n    }\n  }\n\n  animate();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"skills-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, text1Component, text2Component), /*#__PURE__*/React.createElement(\"svg\", {\n    id: \"filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"defs\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"threshold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceGraphic\",\n    type: \"matrix\",\n    values: \"1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 255 -140\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  })))));\n};\n\nexport default Skills2;","map":{"version":3,"sources":["/Users/alberto.ramos/Documents/Personal/GitHub/Website3D/src/components/Skills2.js"],"names":["React","useRef","Skills2","texts","text1","textIndex","length","text2","text1Component","text2Component","morphTime","cooldownTime","time","Date","morph","cooldown","doMorph","fraction","setMorph","style","filter","Math","min","opacity","pow","textContent","doCooldown","animate","requestAnimationFrame","newTime","shouldIncrementIndex","dt"],"mappings":"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","sourcesContent":["\nimport React, { useRef } from 'react'\nimport \"../style/Skills.scss\";\n\nconst Skills2= () =>{\n\n    const texts = [\n            \"React\",\n            \"Kotlin\",\n            \"Spring\",\n            \"Java\",\n    ];\n\n    let text1 = texts[textIndex % texts.length];\n    let text2 = texts[(textIndex + 1) % texts.length];\n    const text1Component = <span id=\"text1\"> {text1} </span>\n    const text2Component = <span id=\"text2\"> {text2} </span>\n\n    // Controls the speed of morphing.\n    const morphTime = 1;\n    const cooldownTime = 0.4;\n\n    let textIndex = texts.length - 1;\n    let time = new Date();\n    let morph = 0;\n    let cooldown = cooldownTime;\n\n    text1 = texts[textIndex % texts.length];\n    text2 = texts[(textIndex + 1) % texts.length];\n\n    function doMorph() {\n        morph -= cooldown;\n        cooldown = 0;\n        \n        let fraction = morph / morphTime;\n        \n        if (fraction > 1) {\n            cooldown = cooldownTime;\n            fraction = 1;\n        }\n        \n        setMorph(fraction);\n    }\n\n    // A lot of the magic happens here, this is what applies the blur filter to the text.\n    function setMorph(fraction) {\n        // fraction = Math.cos(fraction * Math.PI) / -2 + .5;\n        \n        text2Component.style.filter = `blur(${Math.min(8 / fraction - 8, 100)}px)`;\n        text2Component.style.opacity = `${Math.pow(fraction, 0.4) * 100}%`;\n        \n        fraction = 1 - fraction;\n        text1Component.style.filter = `blur(${Math.min(8 / fraction - 8, 100)}px)`;\n        text1Component.style.opacity = `${Math.pow(fraction, 0.4) * 100}%`;\n        \n        text1Component.textContent = texts[textIndex % texts.length];\n        text2Component.textContent = texts[(textIndex + 1) % texts.length];\n    }\n\n    function doCooldown() {\n        morph = 0;\n        \n        text2Component.style.filter = \"\";\n        text2Component.style.opacity = \"100%\";\n        \n        text1Component.style.filter = \"\";\n        text1Component.style.opacity = \"0%\";\n    }\n\n    // Animation loop, which is called every frame.\n    function animate() {\n        requestAnimationFrame(animate);\n        \n        let newTime = new Date();\n        let shouldIncrementIndex = cooldown > 0;\n        let dt = (newTime - time) / 1000;\n        time = newTime;\n        \n        cooldown -= dt;\n        \n        if (cooldown <= 0) {\n            if (shouldIncrementIndex) {\n                textIndex++;\n            }\n            \n            doMorph();\n        } else {\n            doCooldown();\n        }\n    }\n\n\n  \n        animate()\n        return (\n            <div>\n                <div id=\"skills-container\">\n                    {text1Component}\n                    {text2Component}\n                </div>\n                <svg id=\"filters\">\n                    <defs>\n                        <filter id=\"threshold\">\n                            <feColorMatrix in=\"SourceGraphic\"\n                                    type=\"matrix\"\n                                    values=\"1 0 0 0 0\n                                                    0 1 0 0 0\n                                                    0 0 1 0 0\n                                                    0 0 0 255 -140\" />\n                        </filter>\n                    </defs>\n                </svg>\n            </div>\n        )\n        }\nexport default Skills2"]},"metadata":{},"sourceType":"module"}