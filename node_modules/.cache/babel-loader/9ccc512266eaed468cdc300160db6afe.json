{"ast":null,"code":"var _jsxFileName = \"/Users/albertoramos/Documents/Personal/Website/src/components/htmlContent.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport { Html } from \"drei\";\nimport Model from \"./model\";\nimport { useFrame } from \"react-three-fiber\";\nimport { useInView } from \"react-intersection-observer\";\n\nfunction HTMLContent({\n  yPosition,\n  gltfPath,\n  bgColor,\n  rightSide,\n  domContent,\n  children\n}) {\n  const ref = useRef();\n  useFrame(() => ref.current.rotation.y += 0.005);\n  const [refItem, inView] = useInView({\n    threshold: 0\n  });\n  useEffect(() => {\n    inView && (document.body.style.background = bgColor);\n  }, [inView]);\n  const xPosition = rightSide ? 140 : -10;\n  return /*#__PURE__*/React.createElement(\"group\", {\n    position: [xPosition, yPosition, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: ref,\n    position: [-70, -10, 0],\n    scale: [0.85, 0.85, 0.85],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Model, {\n    gltfPath: gltfPath,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Html, {\n    portal: domContent,\n    fullscreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: refItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, children)));\n}\n\nexport default HTMLContent;","map":{"version":3,"sources":["/Users/albertoramos/Documents/Personal/Website/src/components/htmlContent.js"],"names":["React","useEffect","useRef","Html","Model","useFrame","useInView","HTMLContent","yPosition","gltfPath","bgColor","rightSide","domContent","children","ref","current","rotation","y","refItem","inView","threshold","document","body","style","background","xPosition"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,SAAT,QAA0B,6BAA1B;;AAGA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,QAAb;AAAuBC,EAAAA,OAAvB;AAAgCC,EAAAA,SAAhC;AAA2CC,EAAAA,UAA3C;AAAuDC,EAAAA;AAAvD,CAArB,EAAwF;AAEpF,QAAMC,GAAG,GAAGZ,MAAM,EAAlB;AACAG,EAAAA,QAAQ,CAAC,MAAOS,GAAG,CAACC,OAAJ,CAAYC,QAAZ,CAAqBC,CAArB,IAA0B,KAAlC,CAAR;AACA,QAAM,CAACC,OAAD,EAAUC,MAAV,IAAoBb,SAAS,CAAC;AAChCc,IAAAA,SAAS,EAAE;AADqB,GAAD,CAAnC;AAGAnB,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,MAAM,KAAKE,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,UAApB,GAAiCd,OAAtC,CAAN;AACH,GAFQ,EAEN,CAACS,MAAD,CAFM,CAAT;AAIA,QAAMM,SAAS,GAAGd,SAAS,GAAG,GAAH,GAAS,CAAC,EAArC;AAEA,sBACQ;AAAO,IAAA,QAAQ,EAAE,CAACc,SAAD,EAAYjB,SAAZ,EAAuB,CAAvB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAM,IAAA,GAAG,EAAEM,GAAX;AAAgB,IAAA,QAAQ,EAAE,CAAC,CAAC,EAAF,EAAM,CAAC,EAAP,EAAW,CAAX,CAA1B;AAAyC,IAAA,KAAK,EAAE,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAEL,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,eAMI,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEG,UAAd;AAA0B,IAAA,UAAU,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEM,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBL,QAApB,CADJ,CANJ,CADR;AAaH;;AAED,eAAeN,WAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { Html } from \"drei\";\nimport Model from \"./model\"\nimport { useFrame } from \"react-three-fiber\";\nimport { useInView } from \"react-intersection-observer\";\n\n\nfunction HTMLContent({ yPosition, gltfPath, bgColor, rightSide, domContent, children }) {\n\n    const ref = useRef()\n    useFrame(() => (ref.current.rotation.y += 0.005))\n    const [refItem, inView] = useInView({\n        threshold: 0\n    })\n    useEffect(() => {\n        inView && (document.body.style.background = bgColor)\n    }, [inView])\n\n    const xPosition = rightSide ? 140 : -10\n\n    return(\n            <group position={[xPosition, yPosition, 0]}>\n\n                <mesh ref={ref} position={[-70, -10, 0]} scale={[0.85,0.85,0.85]}> \n                    <Model gltfPath={gltfPath}></Model>\n                </mesh>\n\n                <Html portal={domContent} fullscreen>\n                    <div ref={refItem}>{children}</div>\n                </Html>\n\n            </group>\n    )\n}\n\nexport default HTMLContent\n"]},"metadata":{},"sourceType":"module"}