{"ast":null,"code":"var _jsxFileName = \"/Users/alberto/Projects/Personal/Website3D/src/components/Email.js\";\nimport React, { useRef, useState } from 'react';\nimport emailjs from '@emailjs/browser';\nimport \"../style/Email.scss\";\nexport const Email = () => {\n  const [subjectText, setSubjectText] = useState('');\n  const [emailText, setEmailText] = useState('');\n  const [contentText, setContentText] = useState('');\n  const [sendingEmail, setSendingEmail] = useState(false);\n  const form = useRef();\n  const subjectInput = useRef();\n  const emailInput = useRef();\n  const contentInput = useRef();\n\n  const sendEmail = e => {\n    setSendingEmail(true);\n    e.preventDefault();\n\n    if (validateFields()) {\n      emailjs.sendForm('service_lpht0s5', 'template_m8yj6bk', form.current, 'Ng_lvRzLCb008pGkw').then(result => {\n        console.log(`Email sent. HTTP Status: ${result.status}`);\n        clearFields();\n        setSendingEmail(false);\n      }, error => {\n        console.log(error.text);\n      });\n    }\n  };\n\n  const validateFields = () => {\n    let toReturn;\n\n    if (subjectText === '') {\n      console.log('Please add a Subject');\n      toReturn = false;\n    }\n\n    if (emailText === '') {\n      console.log('Please add your Email');\n      emailInput.current.classList.add(\"required--unset\");\n      toReturn = false;\n    }\n\n    if (contentText === '') {\n      console.log('Please add write something kind');\n      contentInput.current.classList.add(\"required--unset\");\n      toReturn = false;\n    }\n\n    if (contentText !== '' && emailSent !== '' && contentText !== '') toReturn = true;\n    return toReturn;\n  };\n\n  const clearFields = () => {\n    setSubjectText('');\n    setEmailText('');\n    setContentText('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"email\",\n    ref: form,\n    onSubmit: sendEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: subjectInput,\n    className: \"email__subject\",\n    type: \"text\",\n    name: \"subject\",\n    placeholder: \"Subject\",\n    value: subjectText,\n    onChange: e => {\n      setSubjectText(e.target.value);\n      subjectInput.current.classList.remove(\"required--unset\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    ref: emailInput,\n    className: \"email__id\",\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    value: emailText,\n    onChange: e => {\n      setEmailText(e.target.value);\n      emailInput.current.classList.remove(\"required--unset\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"email__sendBtn\",\n    type: \"submit\",\n    value: \"Send\",\n    disabled: sendingEmail ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: contentInput,\n    className: \"email__content\",\n    name: \"message\",\n    placeholder: \"Message\",\n    value: contentText,\n    onChange: e => {\n      setContentText(e.target.value);\n      contentInput.current.classList.remove(\"required--unset\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/alberto/Projects/Personal/Website3D/src/components/Email.js"],"names":["React","useRef","useState","emailjs","Email","subjectText","setSubjectText","emailText","setEmailText","contentText","setContentText","sendingEmail","setSendingEmail","form","subjectInput","emailInput","contentInput","sendEmail","e","preventDefault","validateFields","sendForm","current","then","result","console","log","status","clearFields","error","text","toReturn","classList","add","emailSent","target","value","remove"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport emailjs from '@emailjs/browser';\nimport \"../style/Email.scss\";\n\n\nexport const Email = () => {\n    const [subjectText, setSubjectText] = useState('');\n    const [emailText, setEmailText] = useState('');\n    const [contentText, setContentText] = useState('');\n    \n    const [sendingEmail, setSendingEmail] = useState(false);\n\n    const form = useRef();\n    const subjectInput = useRef();\n    const emailInput = useRef();\n    const contentInput = useRef();\n\n\n    const sendEmail = (e) => {\n        setSendingEmail(true);\n        e.preventDefault();\n        if(validateFields()){\n            emailjs.sendForm('service_lpht0s5', 'template_m8yj6bk', form.current, 'Ng_lvRzLCb008pGkw')\n            .then((result) => {\n                console.log(`Email sent. HTTP Status: ${result.status}`);\n                clearFields();\n                setSendingEmail(false);\n            }, (error) => {\n                console.log(error.text);\n            });\n        }\n    };\n\n    const validateFields = () => {\n        let toReturn;\n        if(subjectText === '') { \n            console.log('Please add a Subject'); \n            toReturn = false;\n        } \n        if(emailText === '') { \n            console.log('Please add your Email'); \n            emailInput.current.classList.add(\"required--unset\")\n            toReturn = false \n        } \n        if(contentText === '') { \n            console.log('Please add write something kind'); \n            contentInput.current.classList.add(\"required--unset\")\n            toReturn = false \n        } \n        if(contentText !== '' && emailSent !== '' && contentText !== '') \n            toReturn = true;\n        return toReturn;\n    }\n\n    const clearFields = () => {\n        setSubjectText('');\n        setEmailText('');\n        setContentText('');\n    }\n\n    return (\n        <form className=\"email\" ref={form} onSubmit={sendEmail}>\n            <input \n                ref={subjectInput}\n                className=\"email__subject\"\n                type=\"text\" \n                name=\"subject\" \n                placeholder='Subject' \n                value={subjectText}\n                onChange={ e => { \n                    setSubjectText(e.target.value); \n                    subjectInput.current.classList.remove(\"required--unset\")\n                }}/>\n            <input \n                ref={emailInput}\n                className=\"email__id\" \n                type=\"email\" name=\"email\" \n                placeholder='Email' \n                value={emailText}\n                onChange={ e => { \n                    setEmailText(e.target.value); \n                    emailInput.current.classList.remove(\"required--unset\")\n                }}/>\n            <input className=\"email__sendBtn\" \n                type=\"submit\" \n                value=\"Send\" \n                disabled={sendingEmail ? true : false}/>\n            <textarea \n                ref={contentInput}\n                className=\"email__content\" \n                name=\"message\" \n                placeholder='Message' \n                value={contentText}\n                onChange={ e => { \n                    setContentText(e.target.value);\n                    contentInput.current.classList.remove(\"required--unset\")\n                }}/>\n        </form>\n    );\n};"]},"metadata":{},"sourceType":"module"}